--------------------------------------------------------
--  DELETE STORED PROCEDURES
--------------------------------------------------------
DROP PROCEDURE "PCBCRP"."SP_BCR_TASAS_UNWIND";
DROP PROCEDURE "PCBCRP"."SP_BCR_TASAINTERES_LISTAR";
DROP PROCEDURE "PCBCRP"."SP_BCR_REPORTE6_LISTAR_C2";
DROP PROCEDURE "PCBCRP"."SP_BCR_REPORTE6_EXCEL_C2";
DROP PROCEDURE "PCBCRP"."SP_BCR_MSD_CALCULOMONTOS";
DROP PROCEDURE "PCBCRP"."SP_BCR_OPERACION_UNWIND";
DROP PROCEDURE "PCBCRP"."SP_BCR_REPORTE8_OPERACIONES";


--------------------------------------------------------
--  DDL for Procedure SP_BCR_TASAS_UNWIND
--------------------------------------------------------


create PROCEDURE "PCBCRP"."SP_BCR_TASAS_UNWIND" (

P_IDCARGA 							IN VARCHAR2,
P_FECHACONTRATACION 				IN DATE,
P_IDPRODUCTO 						IN VARCHAR2,
P_NUMEROOPERACION 					IN VARCHAR2,
P_IDCLIENTE 						IN VARCHAR2,
P_TIPOOPERACION         			IN VARCHAR2,
P_IDDIVISAENTRADA 					IN VARCHAR2,
P_IDDIVISASALIDA 					IN VARCHAR2,
P_IMPORTEDIVISAENTRADA 				IN NUMBER,
P_IMPORTEDIVISASALIDA 				IN NUMBER,
P_COTIZACION 						IN NUMBER,
P_PUNTOSSWAP 						IN NUMBER,
P_BASICA 							IN VARCHAR2,
P_CAMBIOREF 						IN NUMBER,
P_FECHAVALOR 						IN DATE,
P_FECHAVENCIMIENTO 					IN DATE,
P_PLAZO 							IN NUMBER,
P_FECHAEJERCICIO 					IN DATE,
P_CALLPUT 							IN VARCHAR2,
P_PLAZA 							IN VARCHAR2,
P_PAISRESIDENCIA 					IN VARCHAR2,
P_RIESGOPAIS 						IN VARCHAR2,
P_PRIMA 							IN NUMBER,
P_IDDIVISAPRIMA 					IN VARCHAR2,
P_OBSERVACIONES 					IN VARCHAR2,
P_FECHAALTA 						IN DATE,
P_FECHAMODIFICACIONCARGA 			IN DATE,
P_OPERACIONSUSTITUYE 				IN VARCHAR2,
P_FECHABAJA 						IN DATE,
P_NIF 								IN VARCHAR2,
P_INTERMEDIARIO 					IN VARCHAR2,
P_INTERMEDIARIODESCRIPCION 			IN VARCHAR2,
P_ESTADO 							IN VARCHAR2,
P_CONTRATO 							IN VARCHAR2,
P_RESIDENTE 						IN VARCHAR2,
P_ESTILO 							IN VARCHAR2,
P_TIPOOPCION 						IN VARCHAR2,
P_TIPOPROCESO 						IN VARCHAR2,
P_HISTORICO 						IN NUMBER,
P_FECHAMOVIMIENTO 					IN DATE,
P_USUARIOCARGA 						IN VARCHAR2,
P_CODIGOOPERACION 					IN VARCHAR2,
P_IMPORTEUSD 						IN NUMBER,
P_CODIGOREPORTE 					IN VARCHAR2,
P_TASAMONEDANACIONAL 				IN NUMBER,
P_MONTOMONEDAEXTRAJERA 				IN NUMBER,
P_TASADIFERENCIAL 					IN NUMBER,
P_DELTA 							IN NUMBER,
P_TASAMONEDAEXTRANJERA 				IN NUMBER,
P_IDMONEDAEXTRANJERA 				IN VARCHAR2,
P_MONTOPEN 							IN NUMBER,
P_TIPOCAMBIOSPOT 					IN NUMBER,
P_TIPOCAMBIOPACTADO 				IN NUMBER,
P_TIPOCAMBIOVENCIMIENTO 			IN NUMBER,
P_VALIDACION 						IN VARCHAR2,
P_CODIGOAGRUPACION 					IN VARCHAR2,
P_TIPOCLIENTE 						IN VARCHAR2,
P_IDFILAARCHIVO 					IN NUMBER,
		
P_TIPOCARGA 						IN NUMBER,
P_TIPOACCION 						IN VARCHAR2,
P_USUARIOCREACION 					IN VARCHAR2,
P_INTENCIONCONTRATACION				IN VARCHAR2,
P_PAGAIDENTIFICFRECUENCIA		    IN VARCHAR2,
P_PAGATASAFIJASPREAD				IN NUMBER,
P_PAGATFIJA							IN VARCHAR2,
P_RECIBEIDENTIFICFRECUENCIA		    IN VARCHAR2,
P_RECIBETASAFIJASPREAD				IN NUMBER,
P_RECIBETFIJA						IN VARCHAR2

)

AS

V_IDTEMP                    VARCHAR2(255) := '';
V_CORRELATIVO				VARCHAR2(12) := '';
V_NUMEROOPERACION 			VARCHAR2(20);
V_HISTORICO					NUMBER;
V_COUNT 					NUMBER;
V_CODIGOESTADO 				NUMBER;
V_TASAMONEDANACIONAL 		NUMBER;
V_TASAMONEDAEXTRANJERA 		NUMBER;
V_MSG_EXCEP   		    	EXCEPTION;
V_ERROR                     VARCHAR2(500) := '';

BEGIN
	IF (P_TIPOCARGA = 7 AND P_ESTADO != 'A') THEN -- identificador IRC
		V_NUMEROOPERACION := FN_BCR_TASAINTERES_GENERAIRD('IRD', P_NUMEROOPERACION);
		V_HISTORICO := 0;
	ELSE
		V_NUMEROOPERACION := P_NUMEROOPERACION;

		-- obtenemos el ultimo valor historico
		SELECT MAX(HISTORICO) INTO V_HISTORICO
		FROM TASA_INTERES
		WHERE NUMEROOPERACION = V_NUMEROOPERACION AND TIPOPROCESO = P_TIPOPROCESO;
	END IF;


	-- verificamos si ya existe un registro para la operacion Inforeport
	IF NVL(V_HISTORICO, 0) =  0 THEN
		V_HISTORICO := 1;
	ELSE
		--Obttenmos el estado del ultimo historico
		SELECT CODIGOESTADO INTO V_CODIGOESTADO
		FROM TASA_INTERES
		WHERE
			NUMEROOPERACION = V_NUMEROOPERACION
			AND HISTORICO = V_HISTORICO
			AND TIPOPROCESO = P_TIPOPROCESO;

		--Si el ultimo historico a sido eliminado
		IF V_CODIGOESTADO = 2 THEN -- Eliminado
			V_HISTORICO := V_HISTORICO + 1;
		ELSE
			-- verificamos si hay algun cambio en el ultimo registro
			SELECT
				COUNT(HISTORICO) INTO V_COUNT
			FROM
				TASA_INTERES
			WHERE
				(
					TO_CHAR(FECHACONTRATACION, 'dd/mm/yyyy')  <> TO_CHAR(P_FECHACONTRATACION, 'dd/mm/yyyy')
					OR ID_PRODUCTO <> P_IDPRODUCTO
					OR NUMEROOPERACION <> V_NUMEROOPERACION
					OR ID_CLIENTE <> P_IDCLIENTE
					OR TIPOOPERACION <> P_TIPOOPERACION
					OR IDDIVISAENTRADA <> P_IDDIVISAENTRADA
					OR IDDIVISASALIDA <> P_IDDIVISASALIDA
					OR IMPORTEDIVISAENTRADA <> P_IMPORTEDIVISAENTRADA
					OR IMPORTEDIVISASALIDA <>  P_IMPORTEDIVISASALIDA
					OR COTIZACION <> P_COTIZACION
					OR PUNTOSSWAP <> P_PUNTOSSWAP
					OR BASICA <> P_BASICA
					OR CAMBIOREF <> P_CAMBIOREF
					OR TO_CHAR(FECHAVALOR, 'dd/mm/yyyy') <> TO_CHAR(P_FECHAVALOR, 'dd/mm/yyyy')
					OR TO_CHAR(FECHAVENCIMIENTO, 'dd/mm/yyyy') <> TO_CHAR(P_FECHAVENCIMIENTO, 'dd/mm/yyyy')
					OR PLAZO <> P_PLAZO
					OR TO_CHAR(FECHAEJERCICIO, 'dd/mm/yyyy')  <> TO_CHAR(P_FECHAEJERCICIO, 'dd/mm/yyyy')
					OR CALLPUT <> P_CALLPUT
					OR PLAZA <> P_PLAZA
					OR PAISRESIDENCIA <> P_PAISRESIDENCIA
					OR RIESGOPAIS <> P_RIESGOPAIS
					OR PRIMA <> P_PRIMA
					OR IDDIVISAPRIMA <> P_IDDIVISAPRIMA
					OR OBSERVACIONES <> P_OBSERVACIONES
					OR TO_CHAR(FECHAALTA, 'dd/mm/yyyy') <> TO_CHAR(P_FECHAALTA, 'dd/mm/yyyy')
					OR TO_CHAR(FECHAMODIFICACIONCARGA, 'dd/mm/yyyy') <> TO_CHAR(P_FECHAMODIFICACIONCARGA, 'dd/mm/yyyy')
					OR OPERACIONSUSTITUYE <> P_OPERACIONSUSTITUYE
					OR TO_CHAR(FECHABAJA, 'dd/mm/yyyy') <> TO_CHAR(P_FECHABAJA, 'dd/mm/yyyy')
					OR NIF <> P_NIF
					OR INTERMEDIARIO <> P_INTERMEDIARIO
					OR INTERMEDIARIODESCRIPCION <> P_INTERMEDIARIODESCRIPCION
					OR ESTADO <> P_ESTADO
					OR CONTRATO <> P_CONTRATO
					OR RESIDENTE <> P_RESIDENTE
					OR ESTILO <> P_ESTILO
					OR TIPOOPCION <> P_TIPOOPCION
					OR TO_CHAR(FECHAMOVIMIENTO, 'dd/mm/yyyy') <> TO_CHAR(P_FECHAMOVIMIENTO, 'dd/mm/yyyy')
					OR USUARIOCARGA <> P_USUARIOCARGA
					OR CODIGOOPERACION <> P_CODIGOOPERACION
					OR IMPORTEUSD <> P_IMPORTEUSD
					OR CODIGOREPORTE <> P_CODIGOREPORTE
					OR TASAMONEDANACIONAL <> P_TASAMONEDANACIONAL
					OR MONTOMONEDAEXTRANJERA <> P_MONTOMONEDAEXTRAJERA
					OR TASADIFERENCIAL <> P_TASADIFERENCIAL
					OR DELTA <> P_DELTA
					OR TASAMONEDAEXTRANJERA <> P_TASAMONEDAEXTRANJERA
					OR IDMONEDAEXTRANJERA <> P_IDMONEDAEXTRANJERA
					OR MONTOPEN <> P_MONTOPEN
					OR TIPOCAMBIOSPOT <> P_TIPOCAMBIOSPOT
					OR TIPOCAMBIOPACTADO <> P_TIPOCAMBIOPACTADO
					OR TIPOCAMBIOVENCIMIENTO <> P_TIPOCAMBIOVENCIMIENTO
					OR VALIDACION <> P_VALIDACION
					OR TIPOCLIENTE <> P_TIPOCLIENTE
				)
				AND HISTORICO = V_HISTORICO
				AND NUMEROOPERACION = V_NUMEROOPERACION
				AND TIPOPROCESO = P_TIPOPROCESO;


				IF (V_COUNT > 0) THEN
					--Eliminamos en forma logica la operacion anterior del la misma fecha de movimiento
					UPDATE TASA_INTERES
					SET CODIGOESTADO = 2
					WHERE
						HISTORICO = V_HISTORICO
						AND NUMEROOPERACION = V_NUMEROOPERACION
						AND TIPOPROCESO = P_TIPOPROCESO
						AND TO_CHAR(FECHAMOVIMIENTO, 'dd/mm/yyyy') = TO_CHAR(P_FECHAMOVIMIENTO, 'dd/mm/yyyy');

					V_HISTORICO := V_HISTORICO + 1;
					COMMIT;
				ELSE
                    V_HISTORICO := NULL;  --para evitar q inserte el mismo registro 2 veces ya no se inserta
					V_ERROR := 'Existe un registro idÃ©ntico para la operaciÃ³n ' || V_NUMEROOPERACION;
					RAISE_APPLICATION_ERROR(-20001, V_ERROR);
				END IF;
		END IF;
	END IF;





	IF NVL(V_HISTORICO, 0) !=  0 THEN
		SELECT
			NVL(TASAMONEDANACIONAL, 0), NVL(TASAMONEDAEXTRANJERA, 0) INTO V_TASAMONEDANACIONAL, V_TASAMONEDAEXTRANJERA
		FROM
			TASA_INTERES
		WHERE
			CORRELATIVO IN (SELECT MAX(op.CORRELATIVO) FROM TASA_INTERES op WHERE op.NUMEROOPERACION = V_NUMEROOPERACION);


		V_IDTEMP := SYS_GUID();
		V_IDTEMP := LOWER(SUBSTR(V_IDTEMP, 1, 8) || '-' || SUBSTR(V_IDTEMP, 9, 4) || '-' || SUBSTR(V_IDTEMP, 13, 4) || '-' || SUBSTR(V_IDTEMP, 17, 4) || '-' || SUBSTR(V_IDTEMP, 21));
		V_CORRELATIVO := FN_BCR_CORREL_GENCOMPUESTO('TasaInteres');


		INSERT INTO TASA_INTERES (
				ID,
				ID_CARGA,
				FECHACONTRATACION,
				ID_PRODUCTO,
				NUMEROOPERACION,
				ID_CLIENTE,
				TIPOOPERACION,
				IDDIVISAENTRADA,
				IDDIVISASALIDA,
				IMPORTEDIVISAENTRADA,
				IMPORTEDIVISASALIDA,
				COTIZACION,
				PUNTOSSWAP,
				BASICA,
				CAMBIOREF,
				FECHAVALOR,
				FECHAVENCIMIENTO,
				PLAZO,
				FECHAEJERCICIO,
				CALLPUT,
				PLAZA,
				PAISRESIDENCIA,
				RIESGOPAIS,
				PRIMA,
				IDDIVISAPRIMA,
				OBSERVACIONES,
				FECHAALTA,
				FECHAMODIFICACIONCARGA,
				OPERACIONSUSTITUYE,
				FECHABAJA,
				NIF,
				INTERMEDIARIO,
				INTERMEDIARIODESCRIPCION,
				ESTADO,
				CONTRATO,
				RESIDENTE,
				ESTILO,
				TIPOOPCION,
				TIPOPROCESO,
				HISTORICO,
				FECHAMOVIMIENTO,
				USUARIOCARGA,
				CODIGOOPERACION,
				IMPORTEUSD,
				CODIGOREPORTE,
				TASAMONEDANACIONAL,
				MONTOMONEDAEXTRANJERA,
				TASADIFERENCIAL,
				DELTA,
				TASAMONEDAEXTRANJERA,
				IDMONEDAEXTRANJERA,
				MONTOPEN,
				TIPOCAMBIOSPOT,
				TIPOCAMBIOPACTADO,
				TIPOCAMBIOVENCIMIENTO,
				VALIDACION,
				CODIGOAGRUPACION,
				TIPOCLIENTE,
				IDFILAARCHIVO,
				CREADO_POR,
				FECHA_CREACION,
				CODIGOESTADO,
                TIPOACCION,
				CORRELATIVO,
				INTENCIONCONTRATACION,
				PAGAIDENTIFICADORFRECUENCIA,
				PAGATASAFIJASPREAD,
				PAGATFIJA,
				RECIBEIDENTIFICADORFRECUENCIA,
				RECIBETASAFIJASPREAD,
				RECIBETFIJA
			) VALUES (
				V_IDTEMP,
				P_IDCARGA,
				P_FECHACONTRATACION,
				P_IDPRODUCTO,
				V_NUMEROOPERACION,
				P_IDCLIENTE,
				P_TIPOOPERACION,
				P_IDDIVISAENTRADA,
				P_IDDIVISASALIDA,
				P_IMPORTEDIVISAENTRADA,
				P_IMPORTEDIVISASALIDA,
				P_COTIZACION,
				P_PUNTOSSWAP,
				P_BASICA,
				P_CAMBIOREF,
				P_FECHAVALOR,
				P_FECHAVENCIMIENTO,
				P_PLAZO,
				P_FECHAEJERCICIO,
				P_CALLPUT,
				P_PLAZA,
				P_PAISRESIDENCIA,
				P_RIESGOPAIS,
				P_PRIMA,
				P_IDDIVISAPRIMA,
				P_OBSERVACIONES,
				P_FECHAALTA,
				P_FECHAMODIFICACIONCARGA,
				P_OPERACIONSUSTITUYE,
				P_FECHABAJA,
				P_NIF,
				P_INTERMEDIARIO,
				P_INTERMEDIARIODESCRIPCION,
				P_ESTADO,
				P_CONTRATO,
				P_RESIDENTE,
				P_ESTILO,
				P_TIPOOPCION,
				P_TIPOPROCESO,
				V_HISTORICO,
				P_FECHAMOVIMIENTO,
				P_USUARIOCARGA,
				P_CODIGOOPERACION,
				P_IMPORTEUSD,
				P_CODIGOREPORTE,
				P_TASAMONEDANACIONAL,
				P_MONTOMONEDAEXTRAJERA,
				P_TASADIFERENCIAL,
				P_DELTA,
				P_TASAMONEDAEXTRANJERA,
				P_IDMONEDAEXTRANJERA,
				P_MONTOPEN,
				P_TIPOCAMBIOSPOT,
				P_TIPOCAMBIOPACTADO,
				P_TIPOCAMBIOVENCIMIENTO,
				P_VALIDACION,
				P_CODIGOAGRUPACION,
				P_TIPOCLIENTE,
				P_IDFILAARCHIVO,
				P_USUARIOCREACION,
				SYSDATE,
				1, 		-- estado activo
                P_TIPOACCION,
				V_CORRELATIVO,
				P_INTENCIONCONTRATACION,
				P_PAGAIDENTIFICFRECUENCIA,
				P_PAGATASAFIJASPREAD,
				P_PAGATFIJA,
				P_RECIBEIDENTIFICFRECUENCIA,
				P_RECIBETASAFIJASPREAD,
				P_RECIBETFIJA
			);
	END IF;

END;


/

--------------------------------------------------------
--  DDL for Procedure SP_BCR_TASAINTERES_LISTAR
--------------------------------------------------------

create PROCEDURE "PCBCRP"."SP_BCR_TASAINTERES_LISTAR" (
P_CODIGOREPORTE 		IN VARCHAR2,
P_NUMEROOPERACION 		IN VARCHAR2,
P_FECHAMOVIMIENTO          IN DATE,
P_IDPRODUCTO 			IN VARCHAR2,
P_CODIGOCLIENTE 		IN VARCHAR2,
P_NOMBRECLIENTE 		IN VARCHAR2,
P_OBSERVACIONES 		IN VARCHAR2,
P_TIPOPROCESO 			IN VARCHAR2,
CURSOR_ 				OUT SYS_REFCURSOR
)
AS

BEGIN
	OPEN CURSOR_ FOR
	SELECT
		o.ID,
		o.ID_CARGA AS IDCARGA,
		o.FECHACONTRATACION AS FECHACONTRATACION,
		o.ID_PRODUCTO AS IDPRODUCTO,
        p.CODIGO AS PRODUCTODESCRIPCION,
		o.NUMEROOPERACION,
		o.ID_CLIENTE AS IDCLIENTE,
		c.CODIGO AS CLIENTECODIGO,
		c.NOMBRE AS CLIENTENOMBRE,
		c.TIPODOCUMENTO,
		CASE
		  WHEN c.TIPODOCUMENTO = 1 OR c.TIPODOCUMENTO = 2 OR c.TIPODOCUMENTO = 3 OR c.TIPODOCUMENTO = 4 OR c.TIPODOCUMENTO = 5 THEN c.NUMERODOCUMENTO
		  WHEN c.TIPODOCUMENTO = 6 THEN c.CODIGOSWIFT
		END AS DOCUMENTOCLIENTE,
		c.SECTOR AS SECTORCLIENTE,
		c.PAISRESIDENCIA AS CLIENTEPAISRESIDENCIA,
		p.TIPOENTREGA,
		o.TIPOOPERACION,
		(	SELECT
				det.DESCRIPCION
			FROM
				PARAMETRO par
					INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO
					INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '002'
			WHERE
				val.VALOR = o.TIPOOPERACION
		)  AS TIPOOPERACIONDESCRIPCION,
		o.IDDIVISAENTRADA,
		de.CODIGO AS  DIVISAENTRADADESCRIPCION,
		o.IDDIVISASALIDA,
		ds.CODIGO AS  DIVISASALIDADESCRIPCION,
		o.IMPORTEDIVISAENTRADA,
		o.IMPORTEDIVISASALIDA,
		o.COTIZACION,
		o.PUNTOSSWAP,
		o.BASICA,
		o.CAMBIOREF,
		o.FECHAVALOR,
		o.FECHAVENCIMIENTO,
		o.PLAZO,
		o.FECHAEJERCICIO,
		o.CALLPUT,
		o.PLAZA,
		o.PAISRESIDENCIA,
		o.RIESGOPAIS,
		o.PRIMA,
		o.IDDIVISAPRIMA,
		dp.CODIGO AS  DIVISAPRIMADESCRIPCION,
		o.OBSERVACIONES,
		o.FECHAALTA,
		o.FECHAMODIFICACIONCARGA,
		o.OPERACIONSUSTITUYE,
		o.FECHABAJA,
		o.NIF,
		o.INTERMEDIARIO,
		o.INTERMEDIARIODESCRIPCION,
		o.ESTADO,
		(	SELECT
				det.DESCRIPCION
			FROM
				PARAMETRO par
					INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO
					INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '014'
			WHERE
				val.VALOR = o.ESTADO
		)  AS ESTADODESC,
		o.CONTRATO,
		o.RESIDENTE,
		o.ESTILO,
		o.TIPOOPCION,
		o.TIPOPROCESO,
		(	SELECT
				det.DESCRIPCION
			FROM
				PARAMETRO par
					INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO
					INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '013'
			WHERE
				val.VALOR = o.TIPOPROCESO
		)  AS TIPOPROCESODESC,
		o.HISTORICO,
		o.FECHAMOVIMIENTO,
		o.USUARIOCARGA,
		o.CODIGOOPERACION,
		o.IMPORTEUSD,
		o.CODIGOREPORTE,
		o.TASAMONEDANACIONAL,
		o.TASAMONEDAEXTRANJERA,
		o.DELTA,
		o.MONTOMONEDAEXTRANJERA,
		o.IDMONEDAEXTRANJERA,
		dex.CODIGO AS  MONEDAEXTRANJERADESCRIPCION,
		o.MONTOPEN,
		o.TIPOCAMBIOSPOT,
		o.TIPOCAMBIOPACTADO,
		o.TIPOCAMBIOVENCIMIENTO,
		o.VALIDACION,
		o.CODIGOAGRUPACION,
		o.TIPOCLIENTE ,
		(SELECT
			det.DESCRIPCION
		FROM
			PARAMETRO par
				INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO
				INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '004'
		WHERE
			val.VALOR = c.TIPOCLIENTE
		) AS TIPOCLIENTEDESCRIPCION,
		o.TASADIFERENCIAL,
		o.IDFILAARCHIVO,
		o.MENSAJEERROR,
		o.CORRELATIVO,
		o.CODIGOESTADO,
	   -- p.CODIGO AS PRODUCTOCODIGO,
	   -- c.CODIGO AS CLIENTECODIGO,
	   -- c.NOMBRE AS CLIENTENOMBRE,

		o.RECIBETASAFIJASPREAD,
		o.RECIBETFIJA,
		o.RECIBEIDENTIFICADORFRECUENCIA,
		o.PAGATASAFIJASPREAD,
		o.PAGATFIJA,
		o.PAGAIDENTIFICADORFRECUENCIA,
		o.VOLATILIDAD,
		o.INTENCIONCONTRATACION

	FROM TASA_INTERES o
		INNER JOIN PRODUCTO p ON p.ID = o.ID_PRODUCTO
		INNER JOIN CLIENTE c ON c.ID = o.ID_CLIENTE
		INNER JOIN DIVISA de ON de.ID = o.IDDIVISAENTRADA
		INNER JOIN DIVISA ds ON ds.ID = o.IDDIVISASALIDA
		LEFT JOIN DIVISA dp ON dp.ID = o.IDDIVISAPRIMA
		LEFT JOIN DIVISA dex ON dex.ID = o.IDMONEDAEXTRANJERA

	WHERE
		o.CODIGOESTADO = 1
		AND (UPPER(TRIM(o.NUMEROOPERACION))LIKE '%' || UPPER(TRIM(P_NUMEROOPERACION)) || '%' OR UPPER(TRIM(o.OPERACIONSUSTITUYE)) LIKE '%' || UPPER(TRIM(P_NUMEROOPERACION)) || '%')
		AND UPPER(TRIM(o.CODIGOREPORTE)) LIKE '%' || UPPER(TRIM(P_CODIGOREPORTE)) || '%'
		AND ((P_FECHAMOVIMIENTO is null) OR TO_CHAR(o.FECHAMOVIMIENTO, 'dd/mm/yyyy') = TO_CHAR(P_FECHAMOVIMIENTO,'dd/mm/yyyy'))
		AND o.ID_PRODUCTO = (SELECT p.ID FROM PRODUCTO p WHERE p.CODIGO = 'IRD') --@i_idProductoIRD
		AND UPPER(TRIM(c.CODIGO)) LIKE '%' || UPPER(TRIM(P_CODIGOCLIENTE)) || '%'
		AND UPPER(TRIM(c.NOMBRE)) LIKE '%' || UPPER(TRIM(P_NOMBRECLIENTE)) || '%'
		AND o.TIPOPROCESO = 'D'
		AND TO_CHAR(o.FECHAVENCIMIENTO, 'yyyyMMdd') >=  CASE WHEN UPPER(TRIM(P_OBSERVACIONES)) = 'VIGENTES' THEN TO_CHAR(SYSDATE, 'yyyyMMdd') ELSE TO_CHAR(o.FECHAVENCIMIENTO, 'yyyyMMdd') END
		AND ((P_OBSERVACIONES = 'VIGENTES')  OR NVL(UPPER(TRIM(o.OBSERVACIONES)),' ') LIKE '%' || UPPER(TRIM(P_OBSERVACIONES)) || '%')

	ORDER BY
	o.NUMEROOPERACION;

END;


/


--------------------------------------------------------
--  DDL for Procedure SP_BCR_REPORTE6_LISTAR_C2
--------------------------------------------------------

create PROCEDURE "PCBCRP"."SP_BCR_REPORTE6_LISTAR_C2" (
P_FECHAMOVIMIENTO IN DATE,
P_TIPOPROCESO  IN VARCHAR2,
CURSOR_ OUT SYS_REFCURSOR
)
AS
BEGIN
 OPEN CURSOR_ FOR
  -- lista de operaciones
		SELECT
			o.ID,
			o.ID_CARGA AS IDCARGA,
			o.FECHACONTRATACION, -- pendiente FECHA_REPORTE
			o.ID_PRODUCTO AS IDPRODUCTO,
			p.CODIGO AS PRODUCTODESCRIPCION,
			o.NUMEROOPERACION,
			o.ID_CLIENTE AS IDCLIENTE,
			c.CODIGO AS CLIENTECODIGO,
			c.NOMBRE AS CLIENTENOMBRE,
            c.TIPODOCUMENTO,
            CASE
              WHEN c.TIPODOCUMENTO = 1 OR c.TIPODOCUMENTO = 2 OR c.TIPODOCUMENTO = 3 OR c.TIPODOCUMENTO = 4 OR c.TIPODOCUMENTO = 5 THEN c.NUMERODOCUMENTO
              WHEN c.TIPODOCUMENTO = 6 THEN c.CODIGOSWIFT
            END AS DOCUMENTOCLIENTE,
			c.SECTOR AS SECTORCLIENTE,
            c.PAISRESIDENCIA AS CLIENTEPAISRESIDENCIA,
			p.TIPOENTREGA,
			o.TIPOOPERACION,
            (SELECT
					det.DESCRIPCION
				FROM
					PARAMETRO par
						INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO
						INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '002'
				WHERE
					val.VALOR = o.TIPOOPERACION
			)  AS TIPOOPERACIONDESCRIPCION,
			o.IDDIVISAENTRADA,
			de.CODIGO AS  DIVISAENTRADADESCRIPCION,
			o.IDDIVISASALIDA,
			ds.CODIGO AS  DIVISASALIDADESCRIPCION,
			o.IMPORTEDIVISAENTRADA,
			o.IMPORTEDIVISASALIDA,
			o.COTIZACION,
			o.PUNTOSSWAP,
			o.BASICA,
			o.CAMBIOREF,
			o.FECHAVALOR,
			o.FECHAVENCIMIENTO,
			o.PLAZO,
			o.FECHAEJERCICIO,
			o.CALLPUT,
			o.PLAZA,
			o.PAISRESIDENCIA,
			o.RIESGOPAIS,
			o.PRIMA,
			o.IDDIVISAPRIMA,
			dp.CODIGO AS  DIVISAPRIMADESCRIPCION,
			CASE
			WHEN TO_CHAR(o.FECHAVENCIMIENTO, 'dd/mm/yyyy') = TO_CHAR(P_FECHAMOVIMIENTO, 'dd/mm/yyyy') THEN
				''
			ELSE
				o.OBSERVACIONES
			END AS OBSERVACIONES,
			o.FECHAALTA,
			o.FECHAMODIFICACIONCARGA,
			o.OPERACIONSUSTITUYE,
			o.FECHABAJA,
			o.NIF,
			o.INTERMEDIARIO,
			o.INTERMEDIARIODESCRIPCION,
			o.ESTADO,
			o.CONTRATO,
			o.RESIDENTE,
			o.ESTILO,
			o.TIPOOPCION,
			o.TIPOPROCESO,
			o.HISTORICO,
			o.FECHAMOVIMIENTO,
			o.USUARIOCARGA,
			o.CODIGOOPERACION,
			o.IMPORTEUSD,
			o.CODIGOREPORTE,
			o.TASAMONEDANACIONAL,
			o.TASAMONEDAEXTRANJERA,
			o.DELTA,
			o.MONTOMONEDAEXTRANJERA,
			o.IDMONEDAEXTRANJERA,
			dex.CODIGO AS  MONEDAEXTRANJERADESCRIPCION,
			o.MONTOPEN,
			o.TIPOCAMBIOSPOT,
			o.TIPOCAMBIOPACTADO,
			o.TIPOCAMBIOVENCIMIENTO,
			o.VALIDACION,
			o.CODIGOAGRUPACION,
			o.TIPOCLIENTE ,
			(SELECT
					det.DESCRIPCION
				FROM
					PARAMETRO par
						INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO
						INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '004'
				WHERE
					val.VALOR = c.TIPOCLIENTE
			) AS TIPOCLIENTEDESCRIPCION,
			o.TASADIFERENCIAL,
			o.IDFILAARCHIVO,
            o.MENSAJEERROR,
			o.CODIGOESTADO,
            o.RECIBETASAFIJASPREAD,
            o.RECIBETFIJA,
            o.RECIBEIDENTIFICADORFRECUENCIA,
            o.PAGATASAFIJASPREAD,
            o.PAGATFIJA,
            o.PAGAIDENTIFICADORFRECUENCIA,
            o.VOLATILIDAD,
            o.INTENCIONCONTRATACION,
            CASE
            WHEN TO_CHAR(o.FECHAVENCIMIENTO, 'dd/mm/yyyy') = TO_CHAR(P_FECHAMOVIMIENTO, 'dd/mm/yyyy') THEN
                'V'
            ELSE
                o.TIPOACCION
            END AS TIPOACCION,
            '' as STRIKERATE,
            '' as BENCHMARK,
            '' as FRECUENCIABENCHMARK
		FROM TASA_INTERES o
			INNER JOIN PRODUCTO p ON p.ID = o.ID_PRODUCTO
			INNER JOIN CLIENTE c ON c.ID = o.ID_CLIENTE
			INNER JOIN DIVISA de ON de.ID = o.IDDIVISAENTRADA
			INNER JOIN DIVISA ds ON ds.ID = o.IDDIVISASALIDA
			LEFT JOIN DIVISA dp ON dp.ID = o.IDDIVISAPRIMA
			LEFT JOIN DIVISA dex ON dex.ID = o.IDMONEDAEXTRANJERA
		WHERE
            o.CODIGOESTADO = 1
            AND (TO_CHAR(o.FECHAMOVIMIENTO, 'dd/mm/yyyy') = TO_CHAR(P_FECHAMOVIMIENTO, 'dd/mm/yyyy')
            OR TO_CHAR(o.FECHAVENCIMIENTO, 'dd/mm/yyyy') = TO_CHAR(P_FECHAMOVIMIENTO, 'dd/mm/yyyy') )
            AND o.TIPOPROCESO = P_TIPOPROCESO
            AND o.ID_PRODUCTO = (SELECT p.ID FROM PRODUCTO p WHERE p.CODIGO = 'IRD') --@i_idProductoIRD
        ORDER BY TO_NUMBER(O.CORRELATIVO);

END;


/


--------------------------------------------------------
--  DDL for Procedure SP_BCR_REPORTE6_EXCEL_C2
--------------------------------------------------------


create PROCEDURE "PCBCRP"."SP_BCR_REPORTE6_EXCEL_C2" (
P_FECHAMOVIMIENTO IN DATE,
P_TIPOPROCESO  IN VARCHAR2,
CURSOR_ OUT SYS_REFCURSOR
)
AS
BEGIN
 OPEN CURSOR_ FOR
  -- lista de operaciones
		SELECT
			p.CODIGO AS PRODUCTODESCRIPCION,
			o.NUMEROOPERACION,
            o.CODIGOREPORTE,
			c.CODIGO AS CLIENTECODIGO,
			c.NOMBRE AS CLIENTENOMBRE,
            (SELECT
					det.DESCRIPCION
				FROM
					PARAMETRO par
						INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO
						INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '002'
				WHERE
					val.VALOR = o.TIPOOPERACION
			)  AS TIPOOPERACIONDESCRIPCION,
			de.CODIGO AS  DIVISAENTRADADESCRIPCION,
			ds.CODIGO AS  DIVISASALIDADESCRIPCION,
			o.IMPORTEDIVISAENTRADA,
			o.IMPORTEDIVISASALIDA,
            o.TIPOCAMBIOSPOT,
            o.VALIDACION,
            o.FECHAVENCIMIENTO,
              CASE
            WHEN TO_CHAR(o.FECHAVENCIMIENTO, 'dd/mm/yyyy') = TO_CHAR(P_FECHAMOVIMIENTO, 'dd/mm/yyyy') THEN
                'V'
            ELSE
                o.TIPOACCION
            END AS TIPOACCION,
            o.DELTA,
            o.TASAMONEDANACIONAL,
			o.TASAMONEDAEXTRANJERA,
            o.IMPORTEUSD
		FROM TASA_INTERES o
			INNER JOIN PRODUCTO p ON p.ID = o.ID_PRODUCTO
			INNER JOIN CLIENTE c ON c.ID = o.ID_CLIENTE
			INNER JOIN DIVISA de ON de.ID = o.IDDIVISAENTRADA
			INNER JOIN DIVISA ds ON ds.ID = o.IDDIVISASALIDA
			LEFT JOIN DIVISA dp ON dp.ID = o.IDDIVISAPRIMA
			LEFT JOIN DIVISA dex ON dex.ID = o.IDMONEDAEXTRANJERA
		WHERE
			o.CODIGOESTADO = 1
            AND (TO_CHAR(o.FECHAMOVIMIENTO, 'dd/mm/yyyy') = TO_CHAR(P_FECHAMOVIMIENTO, 'dd/mm/yyyy')
            OR TO_CHAR(o.FECHAVENCIMIENTO, 'dd/mm/yyyy') = TO_CHAR(P_FECHAMOVIMIENTO, 'dd/mm/yyyy') )
            AND o.TIPOPROCESO = P_TIPOPROCESO
            AND o.ID_PRODUCTO = (SELECT p.ID FROM PRODUCTO p WHERE p.CODIGO = 'IRD') --@i_idProductoIRD
            ORDER BY TO_NUMBER(O.CORRELATIVO);
END;

/

--------------------------------------------------------
--  DDL for Procedure SP_BCR_MSD_CALCULOMONTOS
--------------------------------------------------------

create PROCEDURE "PCBCRP"."SP_BCR_MSD_CALCULOMONTOS" (
P_FECHAMOVIMIENTO IN DATE
)
AS
V_ULTIMAFECHA   DATE;
V_COUNT         INT;

V_HISTORICO 	NUMBER(20, 6) := 0;
V_IRD           NUMBER(20, 6) := 0;
V_IRD_ANULADAS  NUMBER(20, 6) := 0;
V_OTO           NUMBER(20, 6) := 0;
V_ODIV          NUMBER(20, 6) := 0;

--Saldos del dia
CURSOR  C_MSD_DELDIA IS
SELECT 
	MSD.ID, 
	MSD.MONTO, 
	SD.CODIGOOPERACION
FROM 
	MOVIMIENTO_SALDO_DERIVADOS MSD
		INNER JOIN SALDO_DERIVADOS SD ON MSD.ID_SALDODERIVADOS = SD.ID
WHERE 
	TO_CHAR(MSD.FECHA,'dd/mm/yyyyy') = TO_CHAR(P_FECHAMOVIMIENTO,'dd/mm/yyyyy')
	AND MSD.CODIGOESTADO = 1;

BEGIN

    --Calculamos importes historicos quitando las operaciones vencidas
        --REPORTE 6
        SELECT 
			NVL(SUM(NVL(o.IMPORTEUSD,0)),0) INTO V_IRD
        FROM 
			TASA_INTERES o
				INNER JOIN PRODUCTO p ON p.ID = o.ID_PRODUCTO
				INNER JOIN CLIENTE c ON c.ID = o.ID_CLIENTE
				INNER JOIN DIVISA de ON de.ID = o.IDDIVISAENTRADA
				INNER JOIN DIVISA ds ON ds.ID = o.IDDIVISASALIDA
				LEFT JOIN DIVISA dp ON dp.ID = o.IDDIVISAPRIMA
				LEFT JOIN DIVISA dex ON dex.ID = o.IDMONEDAEXTRANJERA
		WHERE
            o.ESTADO <> 'A' --Anulada
			AND o.CODIGOESTADO = 1
            AND TO_DATE(TO_CHAR(o.FECHAMOVIMIENTO, 'dd/mm/yyyy')) <= TO_DATE(TO_CHAR(P_FECHAMOVIMIENTO, 'dd/mm/yyyy'))
            --QUITO LAS VENCIDAS
            AND TO_DATE(TO_CHAR(o.FECHAVENCIMIENTO, 'dd/mm/yyyy')) > TO_DATE(TO_CHAR(P_FECHAMOVIMIENTO, 'dd/mm/yyyy'))
            AND o.TIPOPROCESO = 'D'
            AND o.ID_PRODUCTO = (SELECT p.ID FROM PRODUCTO p WHERE p.CODIGO = 'IRD')--@i_idProductoIRD
        ORDER BY 
			TO_NUMBER(O.CORRELATIVO);
			
			
		SELECT 
			NVL(SUM(NVL(o.IMPORTEUSD,0)),0) INTO V_IRD_ANULADAS
        FROM 
			TASA_INTERES o
				INNER JOIN PRODUCTO p ON p.ID = o.ID_PRODUCTO
				INNER JOIN CLIENTE c ON c.ID = o.ID_CLIENTE
				INNER JOIN DIVISA de ON de.ID = o.IDDIVISAENTRADA
				INNER JOIN DIVISA ds ON ds.ID = o.IDDIVISASALIDA
				LEFT JOIN DIVISA dp ON dp.ID = o.IDDIVISAPRIMA
				LEFT JOIN DIVISA dex ON dex.ID = o.IDMONEDAEXTRANJERA
		WHERE
            o.ESTADO = 'A' --Anulada
			AND o.CODIGOESTADO = 1
            AND TO_DATE(TO_CHAR(o.FECHAMOVIMIENTO, 'dd/mm/yyyy')) <= TO_DATE(TO_CHAR(P_FECHAMOVIMIENTO, 'dd/mm/yyyy'))
            --QUITO LAS VENCIDAS
            AND TO_DATE(TO_CHAR(o.FECHAVENCIMIENTO, 'dd/mm/yyyy')) > TO_DATE(TO_CHAR(P_FECHAMOVIMIENTO, 'dd/mm/yyyy'))
            AND o.TIPOPROCESO = 'D'
            AND o.ID_PRODUCTO = (SELECT p.ID FROM PRODUCTO p WHERE p.CODIGO = 'IRD')--@i_idProductoIRD
        ORDER BY 
			TO_NUMBER(O.CORRELATIVO);
			
			

        --REPORTE 7 OTO
        SELECT  
			NVL(SUM(NVL(o.IMPORTEUSD,0)),0) INTO V_OTO
		FROM 
			OPERACION_DERIVADO o
				INNER JOIN PRODUCTO p ON p.ID = o.ID_PRODUCTO
				INNER JOIN CLIENTE c ON c.ID = o.ID_CLIENTE
				INNER JOIN DIVISA d ON d.ID = o.IDDIVISA
		WHERE
            o.CODIGOESTADO = 1
            AND TO_DATE(TO_CHAR(o.FECHAMOVIMIENTO, 'dd/mm/yyyy')) <= TO_DATE(TO_CHAR(P_FECHAMOVIMIENTO, 'dd/mm/yyyy'))
            --QUITO LAS VENCIDAS
            AND TO_DATE(TO_CHAR(o.FECHATERMINO, 'dd/mm/yyyy')) > TO_DATE(TO_CHAR(P_FECHAMOVIMIENTO, 'dd/mm/yyyy'))
            AND o.TIPOPROCESO = 'D'
            AND o.ID_PRODUCTO IN (SELECT p.ID FROM PRODUCTO p WHERE p.CODIGO IN ('OTO'))
        ORDER BY 
			TO_NUMBER(O.CORRELATIVO);

        --REPORTE 7 ODIV
        SELECT  
			NVL(SUM(NVL(o.IMPORTEUSD,0)),0) INTO V_ODIV
		FROM 
			OPERACION_DERIVADO o
				INNER JOIN PRODUCTO p ON p.ID = o.ID_PRODUCTO
				INNER JOIN CLIENTE c ON c.ID = o.ID_CLIENTE
				INNER JOIN DIVISA d ON d.ID = o.IDDIVISA
		WHERE
            o.CODIGOESTADO = 1
            AND TO_DATE(TO_CHAR(o.FECHAMOVIMIENTO, 'dd/mm/yyyy')) <= TO_DATE(TO_CHAR(P_FECHAMOVIMIENTO, 'dd/mm/yyyy'))
            --QUITO LAS VENCIDAS
            AND TO_DATE(TO_CHAR(o.FECHATERMINO, 'dd/mm/yyyy')) > TO_DATE(TO_CHAR(P_FECHAMOVIMIENTO, 'dd/mm/yyyy'))
            AND o.TIPOPROCESO = 'D'
            AND o.ID_PRODUCTO IN (SELECT p.ID FROM PRODUCTO p WHERE p.CODIGO IN ('ODIV'))
            AND c.CODIGO NOT IN ('PER013597')
        ORDER BY 
			TO_NUMBER(O.CORRELATIVO);

    --Agregamos los importes

        FOR C_MSD IN C_MSD_DELDIA LOOP
            --Actualizo HistÃ¿Â¿Ã¿Â³rico
            IF C_MSD.CODIGOOPERACION = '0603' THEN
                UPDATE MOVIMIENTO_SALDO_DERIVADOS SET MONTO = V_IRD - V_IRD_ANULADAS
                WHERE ID = C_MSD.ID;
                COMMIT;
            ELSIF C_MSD.CODIGOOPERACION = '0706' THEN
                UPDATE MOVIMIENTO_SALDO_DERIVADOS SET MONTO = V_ODIV
                WHERE ID = C_MSD.ID;
                COMMIT;
            ELSIF C_MSD.CODIGOOPERACION = '0799' THEN
                UPDATE MOVIMIENTO_SALDO_DERIVADOS SET MONTO = V_OTO
                WHERE ID = C_MSD.ID;
                COMMIT;
            END IF;

        END LOOP;



    --SUMAMOS TOTALES
        FOR C_MSD  IN C_MSD_DELDIA LOOP
            --Actualizo Totales
            IF C_MSD.CODIGOOPERACION = '0600' THEN
                UPDATE MOVIMIENTO_SALDO_DERIVADOS
                SET MONTO = (
								SELECT  
									SUM(MSD.MONTO) 
								FROM 
									MOVIMIENTO_SALDO_DERIVADOS MSD
										INNER JOIN SALDO_DERIVADOS SD ON MSD.ID_SALDODERIVADOS = SD.ID
								WHERE 
									TO_CHAR(MSD.FECHA,'dd/mm/yyyyy') = TO_CHAR(P_FECHAMOVIMIENTO,'dd/mm/yyyyy')
									AND SD.CODIGOOPERACION IN ('0601','0602','0603','0604','0605','0606','0607','0608','0609','0610','0699')
									AND MSD.CODIGOESTADO = 1
                    )
                WHERE 
					ID = C_MSD.ID;
                COMMIT;
            ELSIF C_MSD.CODIGOOPERACION = '0700' THEN
                UPDATE MOVIMIENTO_SALDO_DERIVADOS
                SET MONTO = (
								SELECT  
									SUM(MSD.MONTO) 
								FROM 
									MOVIMIENTO_SALDO_DERIVADOS MSD
										INNER JOIN SALDO_DERIVADOS SD ON MSD.ID_SALDODERIVADOS = SD.ID
								WHERE 
									TO_CHAR(MSD.FECHA,'dd/mm/yyyyy') = TO_CHAR(P_FECHAMOVIMIENTO,'dd/mm/yyyyy')
									AND SD.CODIGOOPERACION IN ('0701','0702','0703','0704','0704','0706','0799')
									AND MSD.CODIGOESTADO = 1
                    )
                WHERE 
					ID = C_MSD.ID;
                COMMIT;
            END IF;
        END LOOP;
END;

/

--------------------------------------------------------
--  DDL for Procedure SP_BCR_OPERACION_UNWIND
--------------------------------------------------------

create or replace PROCEDURE "PCBCRP"."SP_BCR_OPERACION_UNWIND" (

P_IDCARGA 							IN VARCHAR2,
P_FECHACONTRATACION 				IN DATE,
P_IDPRODUCTO 						IN VARCHAR2,
P_NUMEROOPERACION 					IN VARCHAR2,
P_IDCLIENTE 						IN VARCHAR2,
P_TIPOOPERACION         			IN VARCHAR2,
P_IDDIVISAENTRADA 					IN VARCHAR2,
P_IDDIVISASALIDA 					IN VARCHAR2,
P_IMPORTEDIVISAENTRADA 				IN NUMBER,
P_IMPORTEDIVISASALIDA 				IN NUMBER,
P_COTIZACION 						IN NUMBER,
P_PUNTOSSWAP 						IN NUMBER,
P_BASICA 							IN VARCHAR2,
P_CAMBIOREF 						IN NUMBER,
P_FECHAVALOR 						IN DATE,
P_FECHAVENCIMIENTO 					IN DATE,
P_PLAZO 							IN NUMBER,
P_FECHAEJERCICIO 					IN DATE,
P_CALLPUT 							IN VARCHAR2,
P_PLAZA 							IN VARCHAR2,
P_PAISRESIDENCIA 					IN VARCHAR2,
P_RIESGOPAIS 						IN VARCHAR2,
P_PRIMA 							IN NUMBER,
P_IDDIVISAPRIMA 					IN VARCHAR2,
P_OBSERVACIONES 					IN VARCHAR2,
P_FECHAALTA 						IN DATE,
P_FECHAMODIFICACIONCARGA 			IN DATE,
P_OPERACIONSUSTITUYE 				IN VARCHAR2,
P_FECHABAJA 						IN DATE,
P_NIF 								IN VARCHAR2,
P_INTERMEDIARIO 					IN VARCHAR2,
P_INTERMEDIARIODESCRIPCION 			IN VARCHAR2,
P_ESTADO 							IN VARCHAR2,
P_CONTRATO 							IN VARCHAR2,
P_RESIDENTE 						IN VARCHAR2,
P_ESTILO 							IN VARCHAR2,
P_TIPOOPCION 						IN VARCHAR2,
P_TIPOPROCESO 						IN VARCHAR2,
P_HISTORICO 						IN NUMBER,
P_FECHAMOVIMIENTO 					IN DATE,
P_USUARIOCARGA 						IN VARCHAR2,
P_CODIGOOPERACION 					IN VARCHAR2,
P_IMPORTEUSD 						IN NUMBER,
P_CODIGOREPORTE 					IN VARCHAR2,
P_TASAMONEDANACIONAL 				IN NUMBER,
P_MONTOMONEDAEXTRAJERA 				IN NUMBER,
P_TASADIFERENCIAL 					IN NUMBER,
P_DELTA 							IN NUMBER,
P_TASAMONEDAEXTRANJERA 				IN NUMBER,
P_IDMONEDAEXTRANJERA 				IN VARCHAR2,
P_MONTOPEN 							IN NUMBER,
P_TIPOCAMBIOSPOT 					IN NUMBER,
P_TIPOCAMBIOPACTADO 				IN NUMBER,
P_TIPOCAMBIOVENCIMIENTO 			IN NUMBER,
P_VALIDACION 						IN VARCHAR2,
P_CODIGOAGRUPACION 					IN VARCHAR2,
P_TIPOCLIENTE 						IN VARCHAR2,
P_IDFILAARCHIVO 					IN NUMBER,
		
P_TIPOCARGA 						IN NUMBER,
P_TIPOACCION 						IN VARCHAR2,
P_USUARIOCREACION 					IN VARCHAR2,
P_INTENCIONCONTRATACION				IN VARCHAR2,
P_PAGAIDENTIFICFRECUENCIA		    IN VARCHAR2,
P_PAGATASAFIJASPREAD				IN NUMBER,
P_PAGATFIJA							IN VARCHAR2,
P_RECIBEIDENTIFICFRECUENCIA			IN VARCHAR2,
P_RECIBETASAFIJASPREAD				IN NUMBER,
P_RECIBETFIJA						IN VARCHAR2

)

AS

V_IDTEMP                    VARCHAR2(255) := '';
V_CORRELATIVO				VARCHAR2(12) := '';
V_NUMEROOPERACION 			VARCHAR2(20);
V_HISTORICO					NUMBER;
V_COUNT 					NUMBER;
V_CODIGOESTADO 				NUMBER;
V_TASAMONEDANACIONAL 		NUMBER;
V_TASAMONEDAEXTRANJERA 		NUMBER;
V_MSG_EXCEP   		    	EXCEPTION;
V_ERROR                     VARCHAR2(500) := '';

BEGIN
	IF (P_TIPOCARGA = 7 AND P_ESTADO != 'A') THEN -- identificador IRC
		V_NUMEROOPERACION := FN_BCR_OPERACION_GENERAIRC('IRC', P_NUMEROOPERACION);
		V_HISTORICO := 0;
	ELSE
		V_NUMEROOPERACION := P_NUMEROOPERACION;

		-- obtenemos el ultimo valor historico
		SELECT MAX(HISTORICO) INTO V_HISTORICO
		FROM OPERACION
		WHERE NUMEROOPERACION = V_NUMEROOPERACION AND TIPOPROCESO = P_TIPOPROCESO;
	END IF;


	-- verificamos si ya existe un registro para la operacion Inforeport
	IF NVL(V_HISTORICO, 0) =  0 THEN
		V_HISTORICO := 1;
	ELSE
		--Obttenmos el estado del ultimo historico
		SELECT CODIGOESTADO INTO V_CODIGOESTADO
		FROM OPERACION
		WHERE
			NUMEROOPERACION = V_NUMEROOPERACION
			AND HISTORICO = V_HISTORICO
			AND TIPOPROCESO = P_TIPOPROCESO;

		--Si el ultimo historico a sido eliminado
		IF V_CODIGOESTADO = 2 THEN -- Eliminado
			V_HISTORICO := V_HISTORICO + 1;
		ELSE
			-- verificamos si hay algun cambio en el ultimo registro
			SELECT
				COUNT(HISTORICO) INTO V_COUNT
			FROM
				OPERACION
			WHERE
				(
					TO_CHAR(FECHACONTRATACION, 'dd/mm/yyyy')  <> TO_CHAR(P_FECHACONTRATACION, 'dd/mm/yyyy')
					OR ID_PRODUCTO <> P_IDPRODUCTO
					OR NUMEROOPERACION <> V_NUMEROOPERACION
					OR ID_CLIENTE <> P_IDCLIENTE
					OR TIPOOPERACION <> P_TIPOOPERACION
					OR IDDIVISAENTRADA <> P_IDDIVISAENTRADA
					OR IDDIVISASALIDA <> P_IDDIVISASALIDA
					OR IMPORTEDIVISAENTRADA <> P_IMPORTEDIVISAENTRADA
					OR IMPORTEDIVISASALIDA <>  P_IMPORTEDIVISASALIDA
					OR COTIZACION <> P_COTIZACION
					OR PUNTOSSWAP <> P_PUNTOSSWAP
					OR BASICA <> P_BASICA
					OR CAMBIOREF <> P_CAMBIOREF
					OR TO_CHAR(FECHAVALOR, 'dd/mm/yyyy') <> TO_CHAR(P_FECHAVALOR, 'dd/mm/yyyy')
					OR TO_CHAR(FECHAVENCIMIENTO, 'dd/mm/yyyy') <> TO_CHAR(P_FECHAVENCIMIENTO, 'dd/mm/yyyy')
					OR PLAZO <> P_PLAZO
					OR TO_CHAR(FECHAEJERCICIO, 'dd/mm/yyyy')  <> TO_CHAR(P_FECHAEJERCICIO, 'dd/mm/yyyy')
					OR CALLPUT <> P_CALLPUT
					OR PLAZA <> P_PLAZA
					OR PAISRESIDENCIA <> P_PAISRESIDENCIA
					OR RIESGOPAIS <> P_RIESGOPAIS
					OR PRIMA <> P_PRIMA
					OR IDDIVISAPRIMA <> P_IDDIVISAPRIMA
					OR OBSERVACIONES <> P_OBSERVACIONES
					OR TO_CHAR(FECHAALTA, 'dd/mm/yyyy') <> TO_CHAR(P_FECHAALTA, 'dd/mm/yyyy')
					OR TO_CHAR(FECHAMODIFICACIONCARGA, 'dd/mm/yyyy') <> TO_CHAR(P_FECHAMODIFICACIONCARGA, 'dd/mm/yyyy')
					OR OPERACIONSUSTITUYE <> P_OPERACIONSUSTITUYE
					OR TO_CHAR(FECHABAJA, 'dd/mm/yyyy') <> TO_CHAR(P_FECHABAJA, 'dd/mm/yyyy')
					OR NIF <> P_NIF
					OR INTERMEDIARIO <> P_INTERMEDIARIO
					OR INTERMEDIARIODESCRIPCION <> P_INTERMEDIARIODESCRIPCION
					OR ESTADO <> P_ESTADO
					OR CONTRATO <> P_CONTRATO
					OR RESIDENTE <> P_RESIDENTE
					OR ESTILO <> P_ESTILO
					OR TIPOOPCION <> P_TIPOOPCION
					OR TO_CHAR(FECHAMOVIMIENTO, 'dd/mm/yyyy') <> TO_CHAR(P_FECHAMOVIMIENTO, 'dd/mm/yyyy')
					OR USUARIOCARGA <> P_USUARIOCARGA
					OR CODIGOOPERACION <> P_CODIGOOPERACION
					OR IMPORTEUSD <> P_IMPORTEUSD
					OR CODIGOREPORTE <> P_CODIGOREPORTE
					OR TASAMONEDANACIONAL <> P_TASAMONEDANACIONAL
					OR MONTOMONEDAEXTRANJERA <> P_MONTOMONEDAEXTRAJERA
					OR TASADIFERENCIAL <> P_TASADIFERENCIAL
					OR DELTA <> P_DELTA
					OR TASAMONEDAEXTRANJERA <> P_TASAMONEDAEXTRANJERA
					OR IDMONEDAEXTRANJERA <> P_IDMONEDAEXTRANJERA
					OR MONTOPEN <> P_MONTOPEN
					OR TIPOCAMBIOSPOT <> P_TIPOCAMBIOSPOT
					OR TIPOCAMBIOPACTADO <> P_TIPOCAMBIOPACTADO
					OR TIPOCAMBIOVENCIMIENTO <> P_TIPOCAMBIOVENCIMIENTO
					OR VALIDACION <> P_VALIDACION
					OR TIPOCLIENTE <> P_TIPOCLIENTE
				)
				AND HISTORICO = V_HISTORICO
				AND NUMEROOPERACION = V_NUMEROOPERACION
				AND TIPOPROCESO = P_TIPOPROCESO;


				IF (V_COUNT > 0) THEN
					--Eliminamos en forma logica la operacion anterior del la misma fecha de movimiento
					UPDATE OPERACION
					SET CODIGOESTADO = 2
					WHERE
						HISTORICO = V_HISTORICO
						AND NUMEROOPERACION = V_NUMEROOPERACION
						AND TIPOPROCESO = P_TIPOPROCESO
						AND TO_CHAR(FECHAMOVIMIENTO, 'dd/mm/yyyy') = TO_CHAR(P_FECHAMOVIMIENTO, 'dd/mm/yyyy');

					V_HISTORICO := V_HISTORICO + 1;
					COMMIT;
				ELSE
                    V_HISTORICO := NULL;  --para evitar q inserte el mismo registro 2 veces ya no se inserta
					V_ERROR := 'Existe un registro idÃ©ntico para la operaciÃ³n ' || V_NUMEROOPERACION;
					RAISE_APPLICATION_ERROR(-20001, V_ERROR);
				END IF;
		END IF;
	END IF;





	IF NVL(V_HISTORICO, 0) !=  0 THEN
		SELECT
			NVL(TASAMONEDANACIONAL, 0), NVL(TASAMONEDAEXTRANJERA, 0) INTO V_TASAMONEDANACIONAL, V_TASAMONEDAEXTRANJERA
		FROM
			OPERACION
		WHERE
			CORRELATIVO IN (SELECT MAX(op.CORRELATIVO) FROM OPERACION op WHERE op.NUMEROOPERACION = V_NUMEROOPERACION);


		V_IDTEMP := SYS_GUID();
		V_IDTEMP := LOWER(SUBSTR(V_IDTEMP, 1, 8) || '-' || SUBSTR(V_IDTEMP, 9, 4) || '-' || SUBSTR(V_IDTEMP, 13, 4) || '-' || SUBSTR(V_IDTEMP, 17, 4) || '-' || SUBSTR(V_IDTEMP, 21));
		V_CORRELATIVO := FN_BCR_CORREL_GENCOMPUESTO('Operacion');


		INSERT INTO OPERACION (
				ID,
				ID_CARGA,
				FECHACONTRATACION,
				ID_PRODUCTO,
				NUMEROOPERACION,
				ID_CLIENTE,
				TIPOOPERACION,
				IDDIVISAENTRADA,
				IDDIVISASALIDA,
				IMPORTEDIVISAENTRADA,
				IMPORTEDIVISASALIDA,
				COTIZACION,
				PUNTOSSWAP,
				BASICA,
				CAMBIOREF,
				FECHAVALOR,
				FECHAVENCIMIENTO,
				PLAZO,
				FECHAEJERCICIO,
				CALLPUT,
				PLAZA,
				PAISRESIDENCIA,
				RIESGOPAIS,
				PRIMA,
				IDDIVISAPRIMA,
				OBSERVACIONES,
				FECHAALTA,
				FECHAMODIFICACIONCARGA,
				OPERACIONSUSTITUYE,
				FECHABAJA,
				NIF,
				INTERMEDIARIO,
				INTERMEDIARIODESCRIPCION,
				ESTADO,
				CONTRATO,
				RESIDENTE,
				ESTILO,
				TIPOOPCION,
				TIPOPROCESO,
				HISTORICO,
				FECHAMOVIMIENTO,
				USUARIOCARGA,
				CODIGOOPERACION,
				IMPORTEUSD,
				CODIGOREPORTE,
				TASAMONEDANACIONAL,
				MONTOMONEDAEXTRANJERA,
				TASADIFERENCIAL,
				DELTA,
				TASAMONEDAEXTRANJERA,
				IDMONEDAEXTRANJERA,
				MONTOPEN,
				TIPOCAMBIOSPOT,
				TIPOCAMBIOPACTADO,
				TIPOCAMBIOVENCIMIENTO,
				VALIDACION,
				CODIGOAGRUPACION,
				TIPOCLIENTE,
				IDFILAARCHIVO,
				CREADO_POR,
				FECHA_CREACION,
				CODIGOESTADO,
                TIPOACCION,
				CORRELATIVO,
				INTENCIONCONTRATACION,
				PAGAIDENTIFICADORFRECUENCIA,
				PAGATASAFIJASPREAD,
				PAGATFIJA,
				RECIBEIDENTIFICADORFRECUENCIA,
				RECIBETASAFIJASPREAD,
				RECIBETFIJA
			) VALUES (
				V_IDTEMP,
				P_IDCARGA,
				P_FECHACONTRATACION,
				P_IDPRODUCTO,
				V_NUMEROOPERACION,
				P_IDCLIENTE,
				P_TIPOOPERACION,
				P_IDDIVISAENTRADA,
				P_IDDIVISASALIDA,
				P_IMPORTEDIVISAENTRADA,
				P_IMPORTEDIVISASALIDA,
				P_COTIZACION,
				P_PUNTOSSWAP,
				P_BASICA,
				P_CAMBIOREF,
				P_FECHAVALOR,
				P_FECHAVENCIMIENTO,
				P_PLAZO,
				P_FECHAEJERCICIO,
				P_CALLPUT,
				P_PLAZA,
				P_PAISRESIDENCIA,
				P_RIESGOPAIS,
				P_PRIMA,
				P_IDDIVISAPRIMA,
				P_OBSERVACIONES,
				P_FECHAALTA,
				P_FECHAMODIFICACIONCARGA,
				P_OPERACIONSUSTITUYE,
				P_FECHABAJA,
				P_NIF,
				P_INTERMEDIARIO,
				P_INTERMEDIARIODESCRIPCION,
				P_ESTADO,
				P_CONTRATO,
				P_RESIDENTE,
				P_ESTILO,
				P_TIPOOPCION,
				P_TIPOPROCESO,
				V_HISTORICO,
				P_FECHAMOVIMIENTO,
				P_USUARIOCARGA,
				P_CODIGOOPERACION,
				P_IMPORTEUSD,
				P_CODIGOREPORTE,
				P_TASAMONEDANACIONAL,
				P_MONTOMONEDAEXTRAJERA,
				P_TASADIFERENCIAL,
				P_DELTA,
				P_TASAMONEDAEXTRANJERA,
				P_IDMONEDAEXTRANJERA,
				P_MONTOPEN,
				P_TIPOCAMBIOSPOT,
				P_TIPOCAMBIOPACTADO,
				P_TIPOCAMBIOVENCIMIENTO,
				P_VALIDACION,
				P_CODIGOAGRUPACION,
				P_TIPOCLIENTE,
				P_IDFILAARCHIVO,
				P_USUARIOCREACION,
				SYSDATE,
				1, 		-- estado activo
                P_TIPOACCION,
				V_CORRELATIVO,
				P_INTENCIONCONTRATACION,
				P_PAGAIDENTIFICFRECUENCIA,
				P_PAGATASAFIJASPREAD,
				P_PAGATFIJA,
				P_RECIBEIDENTIFICFRECUENCIA,
				P_RECIBETASAFIJASPREAD,
				P_RECIBETFIJA
			);
	END IF;

END;

/

--------------------------------------------------------
--  DDL for Procedure SP_BCR_REPORTE8_OPERACIONES
--------------------------------------------------------

create or replace PROCEDURE "PCBCRP"."SP_BCR_REPORTE8_OPERACIONES" (
P_IDSALDODERIVADOS  	IN VARCHAR2,
P_FECHA                 IN DATE,
P_TIPOPROCESO           IN VARCHAR2,
CURSOR_ 	OUT SYS_REFCURSOR
)

AS

V_CODIGOOPERACION       VARCHAR2(4);

BEGIN
    SELECT CODIGOOPERACION INTO V_CODIGOOPERACION FROM SALDO_DERIVADOS WHERE ID = P_IDSALDODERIVADOS;

    IF V_CODIGOOPERACION = '0603' THEN
        OPEN CURSOR_ FOR
			SELECT 
				ope.PRODUCTO,
				ti.NUMEROOPERACION AS NUMEROOPERACION,
				ti.CODIGOREPORTE ,
				ope.CLIENTE,
				ope.NOMBRE,
				ope.TIPODOCUMENTO,
				ti.TIPOCLIENTE,
				ti.VALIDACION,
				ti.FECHACONTRATACION AS CONTRATACION,
				ti.FECHAVENCIMIENTO AS VENCIMIENTO,
				ti.IMPORTEUSD,
				ti.ESTADO
			FROM 
				TASA_INTERES ti 
					INNER JOIN (
									SELECT
										p.CODIGO AS PRODUCTO,
										o.NUMEROOPERACION AS NUMEROOPERACION,
										o.CODIGOREPORTE ,
										c.CODIGO AS CLIENTE,
										c.NOMBRE,
										c.TIPODOCUMENTO,
										o.TIPOCLIENTE,
										o.VALIDACION,
										o.FECHACONTRATACION AS CONTRATACION,
										o.FECHAVENCIMIENTO AS VENCIMIENTO,
										o.IMPORTEUSD
									FROM TASA_INTERES o
										INNER JOIN PRODUCTO p ON p.ID = o.ID_PRODUCTO
										INNER JOIN CLIENTE c ON c.ID = o.ID_CLIENTE
										INNER JOIN DIVISA de ON de.ID = o.IDDIVISAENTRADA
										INNER JOIN DIVISA ds ON ds.ID = o.IDDIVISASALIDA
										LEFT JOIN DIVISA dp ON dp.ID = o.IDDIVISAPRIMA
										LEFT JOIN DIVISA dex ON dex.ID = o.IDMONEDAEXTRANJERA
									WHERE
										o.ESTADO <> 'A' --Anulada
										AND o.CODIGOESTADO = 1
										AND TO_DATE(TO_CHAR(o.FECHAMOVIMIENTO, 'dd/mm/yyyy')) <= TO_DATE(TO_CHAR(P_FECHA, 'dd/mm/yyyy'))
										--QUITO LAS VENCIDAS
										AND TO_DATE(TO_CHAR(o.FECHAVENCIMIENTO, 'dd/mm/yyyy')) > TO_DATE(TO_CHAR(P_FECHA, 'dd/mm/yyyy'))
										AND o.TIPOPROCESO = 'D'
										AND o.ID_PRODUCTO = (SELECT p.ID FROM PRODUCTO p WHERE p.CODIGO = 'IRD') --@i_idProductoIRD
										
									MINUS	
										
									SELECT
										p.CODIGO AS PRODUCTO,
										o.NUMEROOPERACION AS NUMEROOPERACION,
										o.CODIGOREPORTE ,
										c.CODIGO AS CLIENTE,
										c.NOMBRE,
										c.TIPODOCUMENTO,
										o.TIPOCLIENTE,
										o.VALIDACION,
										o.FECHACONTRATACION AS CONTRATACION,
										o.FECHAVENCIMIENTO AS VENCIMIENTO,
										o.IMPORTEUSD
									FROM TASA_INTERES o
										INNER JOIN PRODUCTO p ON p.ID = o.ID_PRODUCTO
										INNER JOIN CLIENTE c ON c.ID = o.ID_CLIENTE
										INNER JOIN DIVISA de ON de.ID = o.IDDIVISAENTRADA
										INNER JOIN DIVISA ds ON ds.ID = o.IDDIVISASALIDA
										LEFT JOIN DIVISA dp ON dp.ID = o.IDDIVISAPRIMA
										LEFT JOIN DIVISA dex ON dex.ID = o.IDMONEDAEXTRANJERA
									WHERE
										o.ESTADO = 'A' --Anulada
										AND o.CODIGOESTADO = 1
										AND TO_DATE(TO_CHAR(o.FECHAMOVIMIENTO, 'dd/mm/yyyy')) <= TO_DATE(TO_CHAR(P_FECHA, 'dd/mm/yyyy'))
										--QUITO LAS VENCIDAS
										AND TO_DATE(TO_CHAR(o.FECHAVENCIMIENTO, 'dd/mm/yyyy')) > TO_DATE(TO_CHAR(P_FECHA, 'dd/mm/yyyy'))
										AND o.TIPOPROCESO = 'D'
										AND o.ID_PRODUCTO = (SELECT p.ID FROM PRODUCTO p WHERE p.CODIGO = 'IRD') --@i_idProductoIRD
								) ope 
										ON ope.NUMEROOPERACION = ti.NUMEROOPERACION
			ORDER BY 
				ti.NUMEROOPERACION, ti.CODIGOREPORTE ASC;			

    ELSIF V_CODIGOOPERACION = '0706' THEN
        OPEN CURSOR_ FOR
            SELECT
                p.CODIGO AS PRODUCTO,
                o.NUMEROOPERACION AS NUMEROOPERACION,
                o.CODIGOREPORTE ,
                c.CODIGO AS CLIENTE,
                c.NOMBRE,
                c.TIPODOCUMENTO,
                o.TIPOCLIENTE,
                '' AS  VALIDACION,
                o.FECHAREPORTE AS CONTRATACION,
                o.FECHATERMINO AS VENCIMIENTO,
                o.IMPORTEUSD,
                '' AS ESTADO

            FROM OPERACION_DERIVADO o
                INNER JOIN PRODUCTO p ON p.ID = o.ID_PRODUCTO
                INNER JOIN CLIENTE c ON c.ID = o.ID_CLIENTE
                INNER JOIN DIVISA d ON d.ID = o.IDDIVISA
            WHERE
                o.CODIGOESTADO = 1
                AND TO_DATE(TO_CHAR(o.FECHAMOVIMIENTO, 'dd/mm/yyyy')) <= TO_DATE(TO_CHAR(P_FECHA, 'dd/mm/yyyy'))
                --QUITO LAS VENCIDAS
                AND TO_DATE(TO_CHAR(o.FECHATERMINO, 'dd/mm/yyyy')) > TO_DATE(TO_CHAR(P_FECHA, 'dd/mm/yyyy'))
                AND o.TIPOPROCESO = 'D'
                AND o.ID_PRODUCTO IN (SELECT p.ID FROM PRODUCTO p WHERE p.CODIGO IN ('ODIV'))
                AND c.CODIGO NOT IN ('PER013597')
                ORDER BY o.NUMEROOPERACION, o.CODIGOREPORTE ASC;

    ELSIF V_CODIGOOPERACION = '0799' THEN
        OPEN CURSOR_ FOR
            SELECT
                p.CODIGO AS PRODUCTO,
                o.NUMEROOPERACION AS NUMEROOPERACION,
                o.CODIGOREPORTE ,
                c.CODIGO AS CLIENTE,
                c.NOMBRE,
                c.TIPODOCUMENTO,
                o.TIPOCLIENTE,
                '' AS VALIDACION,
                o.FECHAREPORTE AS CONTRATACION,
                o.FECHATERMINO AS VENCIMIENTO,
                o.IMPORTEUSD,
                '' AS ESTADO
            FROM OPERACION_DERIVADO o
                INNER JOIN PRODUCTO p ON p.ID = o.ID_PRODUCTO
                INNER JOIN CLIENTE c ON c.ID = o.ID_CLIENTE
                INNER JOIN DIVISA d ON d.ID = o.IDDIVISA
            WHERE
                o.CODIGOESTADO = 1
                AND TO_DATE(TO_CHAR(o.FECHAMOVIMIENTO, 'dd/mm/yyyy')) <= TO_DATE(TO_CHAR(P_FECHA, 'dd/mm/yyyy'))
                --QUITO LAS VENCIDAS
                AND TO_DATE(TO_CHAR(o.FECHATERMINO, 'dd/mm/yyyy')) > TO_DATE(TO_CHAR(P_FECHA, 'dd/mm/yyyy'))
                AND o.TIPOPROCESO = 'D'
                AND o.ID_PRODUCTO IN (SELECT p.ID FROM PRODUCTO p WHERE p.CODIGO IN ('OTO'))
                ORDER BY o.NUMEROOPERACION, o.CODIGOREPORTE ASC;
    END IF;
END;

/


GRANT EXECUTE ON "PCBCRP"."SP_BCR_TASAS_UNWIND" TO "APP_PCBCRP";
GRANT EXECUTE ON "PCBCRP"."SP_BCR_TASAINTERES_LISTAR" TO "APP_PCBCRP";
GRANT EXECUTE ON "PCBCRP"."SP_BCR_REPORTE6_LISTAR_C2" TO "APP_PCBCRP";
GRANT EXECUTE ON "PCBCRP"."SP_BCR_REPORTE6_EXCEL_C2" TO "APP_PCBCRP";
GRANT EXECUTE ON "PCBCRP"."SP_BCR_MSD_CALCULOMONTOS" TO "APP_PCBCRP";
GRANT EXECUTE ON "PCBCRP"."SP_BCR_OPERACION_UNWIND" TO "APP_PCBCRP";
GRANT EXECUTE ON "PCBCRP"."SP_BCR_REPORTE8_OPERACIONES" TO "APP_PCBCRP";