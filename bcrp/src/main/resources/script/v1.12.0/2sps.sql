-- INICIO CPASCOS

--------------------------------------------------------
--  DELETE STORED PROCEDURES
--------------------------------------------------------
DROP PROCEDURE "PCBCRP"."SP_BCR_CLIENTE_LISTAR";

--------------------------------------------------------
--  DDL for Procedure SP_BCR_CLIENTE_LISTAR
--------------------------------------------------------

create PROCEDURE "PCBCRP"."SP_BCR_CLIENTE_LISTAR" (
P_CODIGO 				IN VARCHAR2,
P_NOMBRE         		IN VARCHAR2,
P_TIPOCLIENTE          	IN VARCHAR2,
P_CLIENTENOREGISTRADO   IN VARCHAR2,
CURSOR_ 				OUT SYS_REFCURSOR
)
AS

BEGIN
   IF P_CLIENTENOREGISTRADO <> 'S' THEN
        OPEN CURSOR_ FOR
		SELECT 
			cli.ID,         
			cli.CODIGO,
			cli.NOMBRE,
			cli.ENTIDAD,
			cli.PAISRESIDENCIA AS PAISRESIDENCIA,
			pr.DESCRIPCION AS PAISRESIDENCIADESC,
			cli.RIESGOPAIS AS RIESGOPAIS,
			rp.DESCRIPCION AS RIESGOPAISDESC,
			cli.ALTAMIRA,
			cli.PLAZA,
			RTRIM(LTRIM(cli.SECTOR)) AS SECTOR,
			cli.NOMBRECORTO,
			cli.RECHAZARCARGA AS RECHAZARCARGA,
			cc.DESCRIPCION AS RECHAZARCARGADESC,
			cli.TIPOCLIENTE AS TIPOCLIENTE,
			tc.DESCRIPCION AS TIPOCLIENTEDESC,
			cli.TIPODOCUMENTO AS TIPODOCUMENTO,
			td.DESCRIPCION AS TIPODOCUMENTODESC,
			cli.NUMERODOCUMENTO,
			cli.CODIGOSWIFT,
			cli.CODIGOESTADO
		FROM 
			CLIENTE cli
				LEFT JOIN (SELECT 
								det.DESCRIPCION, 
								val.VALOR 
							FROM 
								PARAMETRO par 
									INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO 
									INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '007') pr ON cli.PAISRESIDENCIA = pr.VALOR --Tipo Pais

				LEFT JOIN (SELECT 
								det.DESCRIPCION, 
								val.VALOR 
							FROM 
								PARAMETRO par 
									INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO 
									INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '007') rp ON cli.RIESGOPAIS = rp.VALOR --Tipo Pais

				LEFT JOIN (SELECT 
								det.DESCRIPCION, 
								val.VALOR 
							FROM 
								PARAMETRO par 
									INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO 
									INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '009') cc ON cli.RECHAZARCARGA = cc.VALOR --Carga Cliente

				LEFT JOIN (SELECT 
								det.DESCRIPCION, 
								val.VALOR 
							FROM 
								PARAMETRO par 
									INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO 
									INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '004') tc ON cli.TIPOCLIENTE = tc.VALOR --Tipo Cliente  
				LEFT JOIN (SELECT 
								det.DESCRIPCION, 
								val.VALOR 
							FROM 
								PARAMETRO par 
									INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO 
									INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '040') td ON cli.TIPODOCUMENTO = td.VALOR --Tipo Documento 
		WHERE 
			cli.CODIGOESTADO = 1 
			AND cli.CODIGO LIKE '%' || NVL(P_CODIGO,'') || '%' 
            AND UPPER(cli.NOMBRE) LIKE '%' || UPPER(NVL(P_NOMBRE,'')) || '%' 
			AND cli.TIPOCLIENTE = 
                CASE 
                    WHEN P_TIPOCLIENTE = '-2' THEN cli.TIPOCLIENTE 
                    ELSE P_TIPOCLIENTE 
                END;

	ELSE
        OPEN CURSOR_ FOR
		SELECT 
			cli.ID,         
			cli.CODIGO,
			cli.NOMBRE,
			cli.ENTIDAD,
			cli.PAISRESIDENCIA AS PAISRESIDENCIA,
			pr.DESCRIPCION AS PAISRESIDENCIADESC,
			cli.RIESGOPAIS AS RIESGOPAIS,
			rp.DESCRIPCION AS RIESGOPAISDESC,
			cli.ALTAMIRA,
			cli.PLAZA,
			RTRIM(LTRIM(cli.SECTOR)) AS SECTOR,
			cli.NOMBRECORTO,
			cli.RECHAZARCARGA AS RECHAZARCARGA,
			cc.DESCRIPCION AS RECHAZARCARGADESC,
			cli.TIPOCLIENTE AS TIPOCLIENTE,
			tc.DESCRIPCION as TIPOCLIENTEDESC,
			cli.TIPODOCUMENTO AS TIPODOCUMENTO,
			td.DESCRIPCION AS TIPODOCUMENTODESC,
			cli.NUMERODOCUMENTO,
			cli.CODIGOSWIFT,
			cli.CODIGOESTADO		
		FROM 
			CLIENTE cli
				LEFT JOIN (SELECT 
								det.DESCRIPCION, 
								val.VALOR 
							FROM 
								PARAMETRO par 
									INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO 
									INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '007') pr ON cli.PAISRESIDENCIA = pr.VALOR --Tipo Pais

				LEFT JOIN (SELECT 
								det.DESCRIPCION, 
								val.VALOR 
							FROM 
								PARAMETRO par 
									INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO 
									INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '007') rp ON cli.RIESGOPAIS = rp.VALOR --Tipo Pais

				LEFT JOIN (SELECT 
								det.DESCRIPCION, 
								val.VALOR 
							FROM 
								PARAMETRO par 
									INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO 
									INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '009') cc ON cli.RECHAZARCARGA = cc.VALOR --Carga Cliente

				LEFT JOIN (SELECT 
								det.DESCRIPCION, 
								val.VALOR 
							FROM 
								PARAMETRO par 
									INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO 
									INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '004') tc ON cli.TIPOCLIENTE = tc.VALOR --Tipo Cliente   
				LEFT JOIN (SELECT 
								det.DESCRIPCION, 
								val.VALOR 
							FROM 
								PARAMETRO par 
									INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO 
									INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '040') td ON cli.TIPODOCUMENTO = td.VALOR --Tipo Documento
		WHERE 
			cli.CODIGOESTADO = 1 
			AND cli.CODIGO LIKE '%' || NVL(P_CODIGO,'') || '%' 
            AND UPPER(cli.NOMBRE) LIKE '%' ||  UPPER(NVL(P_NOMBRE,'')) || '%' 
			AND cli.TIPOCLIENTE = CASE WHEN P_TIPOCLIENTE = '-2' THEN cli.TIPOCLIENTE ELSE P_TIPOCLIENTE END
			AND (cli.CODIGO is null
			OR cli.NOMBRE is null
			OR cli.ENTIDAD is null
			OR cli.PAISRESIDENCIA is null
			OR cli.RIESGOPAIS is null
			OR cli.PLAZA is null
			OR cli.SECTOR is null
            OR cli.TIPODOCUMENTO is null);
	END IF;
END;

/

GRANT EXECUTE ON "PCBCRP"."SP_BCR_CLIENTE_LISTAR" TO "APP_PCBCRP";

-- FIN CPASCOS 

-- INICIO SEBASTIAN

--------------------------------------------------------
--  DELETE STORED PROCEDURES
--------------------------------------------------------
DROP PROCEDURE "PCBCRP"."SP_BCR_REPORTE4_OPERACIONES";
DROP PROCEDURE "PCBCRP"."SP_BCR_REPORTE4_ANEXO8_IRC";
DROP PROCEDURE "PCBCRP"."SP_BCR_REPORTE4_ANEXO8";
DROP PROCEDURE "PCBCRP"."SP_BCR_REPORTE8_ANEXO8";
DROP PROCEDURE "PCBCRP"."SP_BCR_REPORTE8_OPERACIONES";

--------------------------------------------------------
--  DDL for Procedure SP_BCR_REPORTE4_OPERACIONES
--------------------------------------------------------
create PROCEDURE  "PCBCRP"."SP_BCR_REPORTE4_OPERACIONES" (
P_IDPOSICIONCAMBIARIA	IN VARCHAR2,
P_FECHA                 IN DATE,
P_TIPOPROCESO           IN VARCHAR2,
CURSOR_ 	OUT SYS_REFCURSOR
)

AS

V_CODIGOBCR		    VARCHAR2(2);
V_TIPOOPERACION	    VARCHAR2(1);
V_TIPOCLIENTE	    VARCHAR2(1);
V_RESIDENTE		    VARCHAR2(1);
V_TIPOENTREGA	    VARCHAR2(1);
V_CALLPUT		    VARCHAR2(1);

V_CODIGOBCR_A		    VARCHAR2(2);
V_TIPOOPERACION_A	    VARCHAR2(1);
V_TIPOCLIENTE_A	    VARCHAR2(1);
V_RESIDENTE_A		    VARCHAR2(1);
V_TIPOENTREGA_A	    VARCHAR2(1);
V_CALLPUT_A		    VARCHAR2(1);

V_IDDIVISA          INTEGER;

BEGIN

   SELECT ID INTO V_IDDIVISA FROM DIVISA WHERE CODIGO = 'PEN';

    SELECT NVL(CODIGOBCR, ' '),  NVL(TIPO_OPERACION, ' ') , NVL(TIPO_CLIENTE, ' ') ,
    NVL(RESIDENTE, ' ') , NVL(TIPO_ENTREGA, ' ') , NVL(CALL_PUT, ' ')
    INTO V_CODIGOBCR, V_TIPOOPERACION, V_TIPOCLIENTE,
    V_RESIDENTE, V_TIPOENTREGA, V_CALLPUT
    FROM POSICION_CAMBIARIA WHERE ID = P_IDPOSICIONCAMBIARIA AND CODIGOESTADO = 1;
    
    SELECT CODIGOBCR,  TIPO_OPERACION , TIPO_CLIENTE,
    RESIDENTE , TIPO_ENTREGA , NVL(CALL_PUT, ' ')
    INTO V_CODIGOBCR_A, V_TIPOOPERACION_A, V_TIPOCLIENTE_A,
    V_RESIDENTE_A, V_TIPOENTREGA_A, V_CALLPUT_A
    FROM POSICION_CAMBIARIA WHERE ID = P_IDPOSICIONCAMBIARIA AND CODIGOESTADO = 1;

IF P_TIPOPROCESO ='D' THEN
    OPEN CURSOR_ FOR
    SELECT
			OPETEMP.PRODUCTO,
			OPETEMP.OPERACION AS NUMEROOPERACION,
			OPETEMP.CODIGOREPORTE,
			OPETEMP.CLIENTE,
			OPETEMP.NOMBRE,
			OPETEMP.TIPO,
			OPETEMP.DIVENTRADA,
			OPETEMP.DIVSALIDA,
			OPETEMP.IMPENTRADA,
			OPETEMP.IMPSALIDA,
			OPETEMP.TIPOCAMBIO,
			OPETEMP.VALIDACION,
			TO_CHAR(OPETEMP.CONTRATACION,'dd/mm/yyyy') AS CONTRATACION,
			TO_CHAR(OPETEMP.VALOR,'dd/mm/yyyy') AS VALOR,
			TO_CHAR(OPETEMP.VENCIMIENTO,'dd/mm/yyyy') AS VENCIMIENTO,
			OPETEMP.IMPORTEUSD,
			OPETEMP.TIPOCLIENTE
		FROM	(	SELECT

						p.CODIGO AS PRODUCTO,
						o.NUMEROOPERACION AS OPERACION,
						o.CODIGOREPORTE ,
						c.CODIGO AS CLIENTE,
						c.NOMBRE,
						mtto.DESCRIPCION AS TIPO,
						de.CODIGO AS DIVENTRADA,
						ds.CODIGO AS DIVSALIDA,
						o.IMPORTEDIVISAENTRADA AS IMPENTRADA,
						o.IMPORTEDIVISASALIDA AS IMPSALIDA,
						o.CAMBIOREF AS TIPOCAMBIO,
						o.VALIDACION,
						o.FECHACONTRATACION AS CONTRATACION,
						o.FECHAVALOR AS VALOR,
						o.FECHAVENCIMIENTO AS VENCIMIENTO,
						o.IMPORTEUSD,
						mttc.DESCRIPCION AS TIPOCLIENTE,
						o.ESTADO

					FROM
						OPERACION o
						INNER JOIN PRODUCTO p ON p.ID = o.ID_PRODUCTO
						INNER JOIN CLIENTE c ON c.ID = o.ID_CLIENTE
						INNER JOIN DIVISA de ON de.ID = o.IDDIVISAENTRADA
						INNER JOIN DIVISA ds ON ds.ID = o.IDDIVISASALIDA
						INNER JOIN (SELECT
										det.DESCRIPCION,
										val.VALOR
									FROM
										PARAMETRO par
										INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO
										INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '002'
									) mtto ON o.TIPOOPERACION = mtto.VALOR
						INNER JOIN (SELECT
										det.DESCRIPCION,
										val.VALOR
									FROM
										PARAMETRO par
										INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO
										INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '004'
									) mttc ON o.TIPOCLIENTE = mttc.VALOR

						LEFT JOIN DIVISA dp ON dp.ID = o.IDDIVISAPRIMA
						LEFT JOIN DIVISA dex ON dex.ID = o.IDMONEDAEXTRANJERA
					WHERE
						o.ESTADO = 'L'
                        AND (o.IDDIVISAENTRADA = V_IDDIVISA OR o.IDDIVISASALIDA = V_IDDIVISA)
                        AND NVL(o.CODIGOREPORTE,' ') <> ' '
                        AND TRIM(o.TIPOPROCESO) = 'D'
                        AND o.CODIGOESTADO = 1

                        AND NVL(p.CODIGOBCR,' ') = V_CODIGOBCR
                        AND NVL(TRIM(o.TIPOOPERACION),' ') = V_TIPOOPERACION
                        AND NVL(c.TIPOCLIENTE,' ') = V_TIPOCLIENTE
                        AND NVL(o.RESIDENTE,' ') = CASE WHEN V_RESIDENTE = 'A' THEN NVL(o.RESIDENTE,' ') ELSE  V_RESIDENTE END
                        AND NVL(p.TIPOENTREGA,' ') = V_TIPOENTREGA
                        AND NVL(o.CALLPUT,' ') = V_CALLPUT
                        AND TO_DATE(TO_CHAR(o.FECHACONTRATACION, 'dd/mm/yyyy')) <= TO_DATE(TO_CHAR(P_FECHA,'dd/mm/yyyy'))
                        AND TO_DATE(TO_CHAR(o.FECHAVENCIMIENTO, 'dd/mm/yyyy')) > TO_DATE(TO_CHAR(P_FECHA,'dd/mm/yyyy'))
                        AND TO_DATE(TO_CHAR(o.FECHAMOVIMIENTO, 'dd/mm/yyyy')) <= TO_DATE(TO_CHAR(P_FECHA,'dd/mm/yyyy'))

                        AND o.NUMEROOPERACION NOT IN (
										SELECT NUMEROOPERACION
										FROM OPERACION
										WHERE
											ESTADO = 'A'
											AND TO_DATE(TO_CHAR(FECHAMOVIMIENTO, 'dd/mm/yyyy')) <= TO_DATE(TO_CHAR(P_FECHA,'dd/mm/yyyy'))
											AND TRIM(TIPOPROCESO) = 'D'
									)

				) OPETEMP ORDER BY OPETEMP.CODIGOREPORTE, OPETEMP.OPERACION ASC;

ELSIF P_TIPOPROCESO ='A' THEN
    OPEN CURSOR_ FOR
        SELECT
			OPETEMP.PRODUCTO,
			OPETEMP.OPERACION AS NUMEROOPERACION,
			OPETEMP.CODIGOREPORTE,
			OPETEMP.CLIENTE,
			OPETEMP.NOMBRE,
			OPETEMP.TIPO,
			OPETEMP.DIVENTRADA,
			OPETEMP.DIVSALIDA,
			OPETEMP.IMPENTRADA,
			OPETEMP.IMPSALIDA,
			OPETEMP.TIPOCAMBIO,
			OPETEMP.VALIDACION,
			OPETEMP.CONTRATACION ,
			OPETEMP.VALOR,
			OPETEMP.VENCIMIENTO,
			OPETEMP.IMPORTEUSD,
			OPETEMP.TIPOCLIENTE
		FROM	(	SELECT

						p.CODIGO AS PRODUCTO,
						o.NUMEROOPERACION AS OPERACION,
						o.CODIGOREPORTE ,
						c.CODIGO AS CLIENTE,
						c.NOMBRE,
						mtto.DESCRIPCION AS TIPO,
						de.CODIGO AS DIVENTRADA,
						ds.CODIGO AS DIVSALIDA,
						o.IMPORTEDIVISAENTRADA AS IMPENTRADA,
						o.IMPORTEDIVISASALIDA AS IMPSALIDA,
						o.CAMBIOREF AS TIPOCAMBIO,
						TRIM(o.VALIDACION) AS VALIDACION,
						TO_CHAR(o.FECHACONTRATACION,'dd/mm/yyyy') AS CONTRATACION,
						TO_CHAR(o.FECHAVALOR,'dd/mm/yyyy') AS VALOR,
						TO_CHAR(o.FECHAVENCIMIENTO,'dd/mm/yyyy') AS VENCIMIENTO,
						o.IMPORTEUSD,
						mttc.DESCRIPCION AS TIPOCLIENTE,
						o.ESTADO

					FROM
						OPERACION o
						INNER JOIN PRODUCTO p ON p.ID = o.ID_PRODUCTO
						INNER JOIN CLIENTE c ON c.ID = o.ID_CLIENTE
						INNER JOIN DIVISA de ON de.ID = o.IDDIVISAENTRADA
						INNER JOIN DIVISA ds ON ds.ID = o.IDDIVISASALIDA
						INNER JOIN (SELECT
										det.DESCRIPCION,
										val.VALOR
									FROM
										PARAMETRO par
										INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO
										INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '002'
									) mtto ON o.TIPOOPERACION = mtto.VALOR
						INNER JOIN (SELECT
										det.DESCRIPCION,
										val.VALOR
									FROM
										PARAMETRO par
										INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO
										INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '004'
									) mttc ON o.TIPOCLIENTE = mttc.VALOR

						LEFT JOIN DIVISA dp ON dp.ID = o.IDDIVISAPRIMA
						LEFT JOIN DIVISA dex ON dex.ID = o.IDMONEDAEXTRANJERA
					WHERE
						o.ESTADO = 'L'
                        AND (o.IDDIVISAENTRADA = V_IDDIVISA OR o.IDDIVISASALIDA = V_IDDIVISA)
                        AND NVL(o.CODIGOREPORTE,' ') <> ' '
                        AND TRIM(o.TIPOPROCESO) = 'D'
                        AND o.CODIGOESTADO = 1

                        AND NVL(p.CODIGOBCR,' ') = V_CODIGOBCR
                        AND NVL(TRIM(o.TIPOOPERACION),' ') = V_TIPOOPERACION
                        AND NVL(c.TIPOCLIENTE,' ') = V_TIPOCLIENTE
                        AND NVL(o.RESIDENTE,' ') = CASE WHEN V_RESIDENTE = 'A' THEN NVL(o.RESIDENTE,' ') ELSE  V_RESIDENTE END
                        AND NVL(p.TIPOENTREGA,' ') = V_TIPOENTREGA
                        AND NVL(o.CALLPUT,' ') = V_CALLPUT
                        AND TO_DATE(TO_CHAR(o.FECHACONTRATACION, 'dd/mm/yyyy')) < TO_DATE(TO_CHAR(P_FECHA,'dd/mm/yyyy'))
                        AND TO_DATE(TO_CHAR(o.FECHAVENCIMIENTO, 'dd/mm/yyyy')) > TO_DATE(TO_CHAR(P_FECHA,'dd/mm/yyyy'))
                        AND TO_DATE(TO_CHAR(o.FECHAMOVIMIENTO, 'dd/mm/yyyy')) < TO_DATE(TO_CHAR(P_FECHA,'dd/mm/yyyy'))

                        AND o.NUMEROOPERACION NOT IN (
										SELECT NUMEROOPERACION
										FROM OPERACION
										WHERE
											ESTADO = 'A'
											AND TO_DATE(TO_CHAR(FECHAMOVIMIENTO, 'dd/mm/yyyy')) < TO_DATE(TO_CHAR(P_FECHA,'dd/mm/yyyy'))
											AND TRIM(TIPOPROCESO) = 'D'
									)
                UNION 

                SELECT

						p.CODIGO AS PRODUCTO,
						o.NUMEROOPERACION AS OPERACION,
						o.CODIGOREPORTE ,
						c.CODIGO AS CLIENTE,
						c.NOMBRE,
						mtto.DESCRIPCION AS TIPO,
						de.CODIGO AS DIVENTRADA,
						ds.CODIGO AS DIVSALIDA,
						o.IMPORTEDIVISAENTRADA AS IMPENTRADA,
						o.IMPORTEDIVISASALIDA AS IMPSALIDA,
						o.CAMBIOREF AS TIPOCAMBIO,
						TRIM(o.VALIDACION) AS VALIDACION,
						TO_CHAR(o.FECHACONTRATACION,'dd/mm/yyyy') AS CONTRATACION,
						TO_CHAR(o.FECHAVALOR,'dd/mm/yyyy') AS VALOR,
						TO_CHAR(o.FECHAVENCIMIENTO,'dd/mm/yyyy') AS VENCIMIENTO,
						o.IMPORTEUSD,
						mttc.DESCRIPCION AS TIPOCLIENTE,
						o.ESTADO

					FROM
						OPERACION o
						INNER JOIN PRODUCTO p ON p.ID = o.ID_PRODUCTO
						INNER JOIN CLIENTE c ON c.ID = o.ID_CLIENTE
						INNER JOIN DIVISA de ON de.ID = o.IDDIVISAENTRADA
						INNER JOIN DIVISA ds ON ds.ID = o.IDDIVISASALIDA
						INNER JOIN (SELECT
										det.DESCRIPCION,
										val.VALOR
									FROM
										PARAMETRO par
										INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO
										INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '002'
									) mtto ON o.TIPOOPERACION = mtto.VALOR
						INNER JOIN (SELECT
										det.DESCRIPCION,
										val.VALOR
									FROM
										PARAMETRO par
										INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO
										INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '004'
									) mttc ON o.TIPOCLIENTE = mttc.VALOR

					WHERE
						o.ESTADO = 'L'
                        AND (o.IDDIVISAENTRADA = V_IDDIVISA OR o.IDDIVISASALIDA = V_IDDIVISA)
                        AND NVL(o.CODIGOREPORTE,' ') <> ' '
                        AND TRIM(o.TIPOPROCESO) = 'A'
                        AND o.CODIGOESTADO = 1

                        AND p.CODIGOBCR = V_CODIGOBCR_A
                        AND o.TIPOOPERACION = V_TIPOOPERACION_A
                        AND c.TIPOCLIENTE = V_TIPOCLIENTE_A
                        AND o.RESIDENTE = CASE WHEN V_RESIDENTE_A = 'A' THEN o.RESIDENTE ELSE  V_RESIDENTE_A END
                        AND p.TIPOENTREGA = V_TIPOENTREGA_A
                        AND NVL(o.CALLPUT,' ') = V_CALLPUT

                        AND TO_CHAR(o.FECHACONTRATACION, 'dd/mm/yyyy') = TO_CHAR(P_FECHA, 'dd/mm/yyyy')
                        AND TO_DATE(TO_CHAR(o.FECHAVENCIMIENTO, 'dd/mm/yyyy')) > TO_DATE(TO_CHAR(P_FECHA,'dd/mm/yyyy'))
                        AND TO_CHAR(o.FECHAMOVIMIENTO, 'dd/mm/yyyy') = TO_CHAR(P_FECHA,'dd/mm/yyyy')
                        AND o.NUMEROOPERACION NOT IN (
										SELECT NUMEROOPERACION
										FROM OPERACION
										WHERE
											ESTADO = 'A'
											AND TO_DATE(TO_CHAR(FECHAMOVIMIENTO, 'dd/mm/yyyy')) <= TO_DATE(TO_CHAR(P_FECHA,'dd/mm/yyyy'))
											AND TRIM(TIPOPROCESO) = 'A'
									)

				) OPETEMP ORDER BY OPETEMP.CODIGOREPORTE, OPETEMP.OPERACION ASC;
    END IF;
END;
/
--------------------------------------------------------
--  DDL for Procedure SP_BCR_REPORTE4_ANEXO8_IRC
--------------------------------------------------------
create PROCEDURE  "PCBCRP"."SP_BCR_REPORTE4_ANEXO8_IRC" (
P_IDPOSICIONCAMBIARIA	IN VARCHAR2,
P_FECHA                 IN DATE,
P_TIPOPROCESO           IN VARCHAR2,
CURSOR_ 	OUT SYS_REFCURSOR
)

AS

V_CODIGOBCR		    VARCHAR2(2);
V_TIPOOPERACION	    VARCHAR2(1);
V_TIPOCLIENTE	    VARCHAR2(1);
V_RESIDENTE		    VARCHAR2(1);
V_TIPOENTREGA	    VARCHAR2(1);
V_CALLPUT		    VARCHAR2(1);
V_IDDIVISA          INTEGER;

BEGIN

   SELECT ID INTO V_IDDIVISA FROM DIVISA WHERE CODIGO = 'PEN';

    SELECT NVL(CODIGOBCR, ' '),  NVL(TIPO_OPERACION, ' ') , NVL(TIPO_CLIENTE, ' ') ,
    NVL(RESIDENTE, ' ') , NVL(TIPO_ENTREGA, ' ') , NVL(CALL_PUT, ' ')
    INTO V_CODIGOBCR, V_TIPOOPERACION, V_TIPOCLIENTE,
    V_RESIDENTE, V_TIPOENTREGA, V_CALLPUT
    FROM POSICION_CAMBIARIA WHERE ID = P_IDPOSICIONCAMBIARIA;

IF P_TIPOPROCESO ='D' THEN
    OPEN CURSOR_ FOR
    SELECT
			OPETEMP.PRODUCTO,
            OPETEMP.OPERACION AS NUMEROOPERACION ,
			OPETEMP.CODIGOREPORTE,
			OPETEMP.CLIENTE,
			OPETEMP.NOMBRE,
            OPETEMP.TIPO,
            OPETEMP.DIVENTRADA,
            OPETEMP.DIVSALIDA,
            SUM(OPETEMP.IMPENTRADA) AS IMPENTRADA,
            SUM(OPETEMP.IMPSALIDA) AS IMPSALIDA,
            OPETEMP.TIPOCAMBIO,
            OPETEMP.VALIDACION,
            MAX(TO_CHAR(OPETEMP.CONTRATACION,'dd/mm/yyyy')) AS CONTRATACION,
            MIN(TO_CHAR(OPETEMP.VALOR,'dd/mm/yyyy')) AS VALOR,
            MAX(TO_CHAR(OPETEMP.VENCIMIENTO,'dd/mm/yyyy')) AS VENCIMIENTO,
			SUM(OPETEMP.IMPORTEUSD) AS IMPORTEUSD,
            OPETEMP.TIPOCLIENTE
		FROM	(	SELECT

						p.CODIGO AS PRODUCTO,
						SUBSTR(o.NUMEROOPERACION,0, LENGTH(o.NUMEROOPERACION)-3) AS OPERACION,
						o.CODIGOREPORTE ,
						c.CODIGO AS CLIENTE,
						c.NOMBRE,
						mtto.DESCRIPCION AS TIPO,
						de.CODIGO AS DIVENTRADA,
						ds.CODIGO AS DIVSALIDA,
						o.IMPORTEDIVISAENTRADA AS IMPENTRADA,
						o.IMPORTEDIVISASALIDA AS IMPSALIDA,
						o.CAMBIOREF AS TIPOCAMBIO,
						'' AS VALIDACION,
						o.FECHACONTRATACION AS CONTRATACION,
						o.FECHAVALOR AS VALOR,
						o.FECHAVENCIMIENTO AS VENCIMIENTO,
						o.IMPORTEUSD,
						mttc.DESCRIPCION AS TIPOCLIENTE,
						o.ESTADO

					FROM
						OPERACION o
						INNER JOIN PRODUCTO p ON p.ID = o.ID_PRODUCTO
						INNER JOIN CLIENTE c ON c.ID = o.ID_CLIENTE
						INNER JOIN DIVISA de ON de.ID = o.IDDIVISAENTRADA
						INNER JOIN DIVISA ds ON ds.ID = o.IDDIVISASALIDA
						INNER JOIN (SELECT
										det.DESCRIPCION,
										val.VALOR
									FROM
										PARAMETRO par
										INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO
										INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '002'
									) mtto ON o.TIPOOPERACION = mtto.VALOR
						INNER JOIN (SELECT
										det.DESCRIPCION,
										val.VALOR
									FROM
										PARAMETRO par
										INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO
										INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '004'
									) mttc ON o.TIPOCLIENTE = mttc.VALOR

						LEFT JOIN DIVISA dp ON dp.ID = o.IDDIVISAPRIMA
						LEFT JOIN DIVISA dex ON dex.ID = o.IDMONEDAEXTRANJERA
					WHERE
						o.ESTADO = 'L'
                        AND (o.IDDIVISAENTRADA = V_IDDIVISA OR o.IDDIVISASALIDA = V_IDDIVISA)
                        AND NVL(o.CODIGOREPORTE,' ') <> ' '
                        AND TRIM(o.TIPOPROCESO) = 'D'
                        AND o.CODIGOESTADO = 1

                        AND NVL(p.CODIGOBCR,' ') = V_CODIGOBCR
                        AND NVL(TRIM(o.TIPOOPERACION),' ') = V_TIPOOPERACION
                        AND NVL(c.TIPOCLIENTE,' ') = V_TIPOCLIENTE
                        AND NVL(o.RESIDENTE,' ') = CASE WHEN V_RESIDENTE = 'A' THEN NVL(o.RESIDENTE,' ') ELSE  V_RESIDENTE END
                        AND NVL(p.TIPOENTREGA,' ') = V_TIPOENTREGA
                        AND NVL(o.CALLPUT,' ') = V_CALLPUT
                        AND TO_DATE(TO_CHAR(o.FECHACONTRATACION, 'dd/mm/yyyy')) <= TO_DATE(TO_CHAR(P_FECHA,'dd/mm/yyyy'))
                        AND TO_DATE(TO_CHAR(o.FECHAVENCIMIENTO, 'dd/mm/yyyy')) > TO_DATE(TO_CHAR(P_FECHA,'dd/mm/yyyy'))
                        AND TO_DATE(TO_CHAR(o.FECHAMOVIMIENTO, 'dd/mm/yyyy')) <= TO_DATE(TO_CHAR(P_FECHA,'dd/mm/yyyy'))
                        AND p.id IN  (SELECT ID FROM PRODUCTO WHERE CODIGO='IRC')
                        AND o.NUMEROOPERACION NOT IN (
										SELECT NUMEROOPERACION
										FROM OPERACION
										WHERE
											ESTADO = 'A'
											AND TO_DATE(TO_CHAR(FECHAMOVIMIENTO, 'dd/mm/yyyy')) <= TO_DATE(TO_CHAR(P_FECHA,'dd/mm/yyyy'))
											AND TRIM(TIPOPROCESO) = 'D'
									)
				) OPETEMP
                GROUP BY OPETEMP.PRODUCTO, OPETEMP.OPERACION, OPETEMP.CODIGOREPORTE, OPETEMP.CLIENTE, OPETEMP.NOMBRE,
                OPETEMP.TIPO, OPETEMP.DIVENTRADA, OPETEMP.DIVSALIDA, OPETEMP.TIPOCLIENTE, OPETEMP.TIPOCAMBIO, OPETEMP.VALIDACION
                ORDER BY OPETEMP.CODIGOREPORTE ASC , OPETEMP.OPERACION ASC;

ELSIF P_TIPOPROCESO ='A' THEN
    OPEN CURSOR_ FOR
        SELECT
			OPETEMP.PRODUCTO,
            OPETEMP.OPERACION AS NUMEROOPERACION ,
			OPETEMP.CODIGOREPORTE,
			OPETEMP.CLIENTE,
			OPETEMP.NOMBRE,
            OPETEMP.TIPO,
            OPETEMP.DIVENTRADA,
            OPETEMP.DIVSALIDA,
            SUM(OPETEMP.IMPENTRADA) AS IMPENTRADA,
            SUM(OPETEMP.IMPSALIDA) AS IMPSALIDA,
            OPETEMP.TIPOCAMBIO,
            OPETEMP.VALIDACION,
            MAX(TO_CHAR(OPETEMP.CONTRATACION,'dd/mm/yyyy')) AS CONTRATACION,
            MIN(TO_CHAR(OPETEMP.VALOR,'dd/mm/yyyy')) AS VALOR,
            MAX(TO_CHAR(OPETEMP.VENCIMIENTO,'dd/mm/yyyy')) AS VENCIMIENTO,
			SUM(OPETEMP.IMPORTEUSD) AS IMPORTEUSD,
            OPETEMP.TIPOCLIENTE
		FROM	(	SELECT

						p.CODIGO AS PRODUCTO,
						SUBSTR(o.NUMEROOPERACION,0, LENGTH(o.NUMEROOPERACION)-3) AS OPERACION,
						o.CODIGOREPORTE ,
						c.CODIGO AS CLIENTE,
						c.NOMBRE,
						mtto.DESCRIPCION AS TIPO,
						de.CODIGO AS DIVENTRADA,
						ds.CODIGO AS DIVSALIDA,
						o.IMPORTEDIVISAENTRADA AS IMPENTRADA,
						o.IMPORTEDIVISASALIDA AS IMPSALIDA,
						o.CAMBIOREF AS TIPOCAMBIO,
						'' AS VALIDACION,
						o.FECHACONTRATACION AS CONTRATACION,
						o.FECHAVALOR AS VALOR,
						o.FECHAVENCIMIENTO AS VENCIMIENTO,
						o.IMPORTEUSD,
						mttc.DESCRIPCION AS TIPOCLIENTE,
						o.ESTADO

					FROM
						OPERACION o
						INNER JOIN PRODUCTO p ON p.ID = o.ID_PRODUCTO
						INNER JOIN CLIENTE c ON c.ID = o.ID_CLIENTE
						INNER JOIN DIVISA de ON de.ID = o.IDDIVISAENTRADA
						INNER JOIN DIVISA ds ON ds.ID = o.IDDIVISASALIDA
						INNER JOIN (SELECT
										det.DESCRIPCION,
										val.VALOR
									FROM
										PARAMETRO par
										INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO
										INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '002'
									) mtto ON o.TIPOOPERACION = mtto.VALOR
						INNER JOIN (SELECT
										det.DESCRIPCION,
										val.VALOR
									FROM
										PARAMETRO par
										INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO
										INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '004'
									) mttc ON o.TIPOCLIENTE = mttc.VALOR

						LEFT JOIN DIVISA dp ON dp.ID = o.IDDIVISAPRIMA
						LEFT JOIN DIVISA dex ON dex.ID = o.IDMONEDAEXTRANJERA
					WHERE
						o.ESTADO = 'L'
                        AND (o.IDDIVISAENTRADA = V_IDDIVISA OR o.IDDIVISASALIDA = V_IDDIVISA)
                        AND NVL(o.CODIGOREPORTE,' ') <> ' '
                        AND TRIM(o.TIPOPROCESO) = 'D'
                        AND o.CODIGOESTADO = 1

                        AND NVL(p.CODIGOBCR,' ') = V_CODIGOBCR
                        AND NVL(TRIM(o.TIPOOPERACION),' ') = V_TIPOOPERACION
                        AND NVL(c.TIPOCLIENTE,' ') = V_TIPOCLIENTE
                        AND NVL(o.RESIDENTE,' ') = CASE WHEN V_RESIDENTE = 'A' THEN NVL(o.RESIDENTE,' ') ELSE  V_RESIDENTE END
                        AND NVL(p.TIPOENTREGA,' ') = V_TIPOENTREGA
                        AND NVL(o.CALLPUT,' ') = V_CALLPUT
                        AND TO_DATE(TO_CHAR(o.FECHACONTRATACION, 'dd/mm/yyyy')) < TO_DATE(TO_CHAR(P_FECHA,'dd/mm/yyyy'))
                        AND TO_DATE(TO_CHAR(o.FECHAVENCIMIENTO, 'dd/mm/yyyy')) > TO_DATE(TO_CHAR(P_FECHA,'dd/mm/yyyy'))
                        AND TO_DATE(TO_CHAR(o.FECHAMOVIMIENTO, 'dd/mm/yyyy')) < TO_DATE(TO_CHAR(P_FECHA,'dd/mm/yyyy'))
                        AND p.id IN  (SELECT ID FROM PRODUCTO WHERE CODIGO='IRC')
                        AND o.NUMEROOPERACION NOT IN (
										SELECT NUMEROOPERACION
										FROM OPERACION
										WHERE
											ESTADO = 'A'
											AND TO_DATE(TO_CHAR(FECHAMOVIMIENTO, 'dd/mm/yyyy')) < TO_DATE(TO_CHAR(P_FECHA,'dd/mm/yyyy'))
											AND TRIM(TIPOPROCESO) = 'D'
									)
                UNION 

                SELECT

						p.CODIGO AS PRODUCTO,
						SUBSTR(o.NUMEROOPERACION,0, LENGTH(o.NUMEROOPERACION)-3) AS OPERACION,
						o.CODIGOREPORTE ,
						c.CODIGO AS CLIENTE,
						c.NOMBRE,
						mtto.DESCRIPCION AS TIPO,
						de.CODIGO AS DIVENTRADA,
						ds.CODIGO AS DIVSALIDA,
						o.IMPORTEDIVISAENTRADA AS IMPENTRADA,
						o.IMPORTEDIVISASALIDA AS IMPSALIDA,
						o.CAMBIOREF AS TIPOCAMBIO,
						'' AS VALIDACION,
						o.FECHACONTRATACION AS CONTRATACION,
						o.FECHAVALOR AS VALOR,
						o.FECHAVENCIMIENTO AS VENCIMIENTO,
						o.IMPORTEUSD,
						mttc.DESCRIPCION AS TIPOCLIENTE,
						o.ESTADO

					FROM
						OPERACION o
						INNER JOIN PRODUCTO p ON p.ID = o.ID_PRODUCTO
						INNER JOIN CLIENTE c ON c.ID = o.ID_CLIENTE
						INNER JOIN DIVISA de ON de.ID = o.IDDIVISAENTRADA
						INNER JOIN DIVISA ds ON ds.ID = o.IDDIVISASALIDA
						INNER JOIN (SELECT
										det.DESCRIPCION,
										val.VALOR
									FROM
										PARAMETRO par
										INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO
										INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '002'
									) mtto ON o.TIPOOPERACION = mtto.VALOR
						INNER JOIN (SELECT
										det.DESCRIPCION,
										val.VALOR
									FROM
										PARAMETRO par
										INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO
										INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '004'
									) mttc ON o.TIPOCLIENTE = mttc.VALOR

					WHERE
						o.ESTADO = 'L'
                        AND (o.IDDIVISAENTRADA = V_IDDIVISA OR o.IDDIVISASALIDA = V_IDDIVISA)
                        AND NVL(o.CODIGOREPORTE,' ') <> ' '
                        AND TRIM(o.TIPOPROCESO) = P_TIPOPROCESO
                        AND o.CODIGOESTADO = 1

                        AND NVL(p.CODIGOBCR,' ') = V_CODIGOBCR
                        AND NVL(TRIM(o.TIPOOPERACION),' ') = V_TIPOOPERACION
                        AND NVL(c.TIPOCLIENTE,' ') = V_TIPOCLIENTE
                        AND NVL(o.RESIDENTE,' ') = CASE WHEN V_RESIDENTE = 'A' THEN NVL(o.RESIDENTE,' ') ELSE  V_RESIDENTE END
                        AND NVL(p.TIPOENTREGA,' ') = V_TIPOENTREGA
                        AND NVL(o.CALLPUT,' ') = V_CALLPUT

                        AND TO_CHAR(o.FECHACONTRATACION, 'dd/mm/yyyy') = TO_CHAR(P_FECHA, 'dd/mm/yyyy')
                        AND TO_DATE(TO_CHAR(o.FECHAVENCIMIENTO, 'dd/mm/yyyy')) > TO_DATE(TO_CHAR(P_FECHA,'dd/mm/yyyy'))
                        AND TO_CHAR(o.FECHAMOVIMIENTO, 'dd/mm/yyyy') = TO_CHAR(P_FECHA,'dd/mm/yyyy')
                        AND p.id IN  (SELECT ID FROM PRODUCTO WHERE CODIGO='IRC')
                        AND o.NUMEROOPERACION NOT IN (
										SELECT NUMEROOPERACION
										FROM OPERACION
										WHERE
											ESTADO = 'A'
											AND TO_DATE(TO_CHAR(FECHAMOVIMIENTO, 'dd/mm/yyyy')) <= TO_DATE(TO_CHAR(P_FECHA,'dd/mm/yyyy'))
											AND TRIM(TIPOPROCESO) = P_TIPOPROCESO
									)

				) OPETEMP
                GROUP BY OPETEMP.PRODUCTO, OPETEMP.OPERACION, OPETEMP.CODIGOREPORTE, OPETEMP.CLIENTE, OPETEMP.NOMBRE,
                OPETEMP.TIPO, OPETEMP.DIVENTRADA, OPETEMP.DIVSALIDA, OPETEMP.TIPOCLIENTE, OPETEMP.TIPOCAMBIO, OPETEMP.VALIDACION
                ORDER BY OPETEMP.CODIGOREPORTE ASC , OPETEMP.OPERACION ASC;
    END IF;
END;
/
--------------------------------------------------------
--  DDL for Procedure SP_BCR_REPORTE4_ANEXO8
--------------------------------------------------------
create PROCEDURE  "PCBCRP"."SP_BCR_REPORTE4_ANEXO8" (
P_IDPOSICIONCAMBIARIA	IN VARCHAR2,
P_FECHA                 IN DATE,
P_TIPOPROCESO           IN VARCHAR2,
CURSOR_ 	OUT SYS_REFCURSOR
)

AS

V_CODIGOBCR		    VARCHAR2(2);
V_TIPOOPERACION	    VARCHAR2(1);
V_TIPOCLIENTE	    VARCHAR2(1);
V_RESIDENTE		    VARCHAR2(1);
V_TIPOENTREGA	    VARCHAR2(1);
V_CALLPUT		    VARCHAR2(1);
V_IDDIVISA          INTEGER;

BEGIN

   SELECT ID INTO V_IDDIVISA FROM DIVISA WHERE CODIGO = 'PEN';

    SELECT NVL(CODIGOBCR, ' '),  NVL(TIPO_OPERACION, ' ') , NVL(TIPO_CLIENTE, ' ') ,
    NVL(RESIDENTE, ' ') , NVL(TIPO_ENTREGA, ' ') , NVL(CALL_PUT, ' ')
    INTO V_CODIGOBCR, V_TIPOOPERACION, V_TIPOCLIENTE,
    V_RESIDENTE, V_TIPOENTREGA, V_CALLPUT
    FROM POSICION_CAMBIARIA WHERE ID = P_IDPOSICIONCAMBIARIA;

IF P_TIPOPROCESO ='D' THEN
    OPEN CURSOR_ FOR
    SELECT
			OPETEMP.PRODUCTO,
			OPETEMP.OPERACION AS NUMEROOPERACION,
			OPETEMP.CODIGOREPORTE,
			OPETEMP.CLIENTE,
			OPETEMP.NOMBRE,
			OPETEMP.TIPO,
			OPETEMP.DIVENTRADA,
			OPETEMP.DIVSALIDA,
			OPETEMP.IMPENTRADA,
			OPETEMP.IMPSALIDA,
			OPETEMP.TIPOCAMBIO,
			OPETEMP.VALIDACION,
			TO_CHAR(OPETEMP.CONTRATACION,'dd/mm/yyyy') AS CONTRATACION,
			TO_CHAR(OPETEMP.VALOR,'dd/mm/yyyy') AS VALOR,
			TO_CHAR(OPETEMP.VENCIMIENTO,'dd/mm/yyyy') AS VENCIMIENTO,
			OPETEMP.IMPORTEUSD,
			OPETEMP.TIPOCLIENTE
		FROM	(	SELECT

						p.CODIGO AS PRODUCTO,
						o.NUMEROOPERACION AS OPERACION,
						o.CODIGOREPORTE ,
						c.CODIGO AS CLIENTE,
						c.NOMBRE,
						mtto.DESCRIPCION AS TIPO,
						de.CODIGO AS DIVENTRADA,
						ds.CODIGO AS DIVSALIDA,
						o.IMPORTEDIVISAENTRADA AS IMPENTRADA,
						o.IMPORTEDIVISASALIDA AS IMPSALIDA,
						o.CAMBIOREF AS TIPOCAMBIO,
						o.VALIDACION,
						o.FECHACONTRATACION AS CONTRATACION,
						o.FECHAVALOR AS VALOR,
						o.FECHAVENCIMIENTO AS VENCIMIENTO,
						o.IMPORTEUSD,
						mttc.DESCRIPCION AS TIPOCLIENTE,
						o.ESTADO

					FROM
						OPERACION o
						INNER JOIN PRODUCTO p ON p.ID = o.ID_PRODUCTO
						INNER JOIN CLIENTE c ON c.ID = o.ID_CLIENTE
						INNER JOIN DIVISA de ON de.ID = o.IDDIVISAENTRADA
						INNER JOIN DIVISA ds ON ds.ID = o.IDDIVISASALIDA
						INNER JOIN (SELECT
										det.DESCRIPCION,
										val.VALOR
									FROM
										PARAMETRO par
										INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO
										INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '002'
									) mtto ON o.TIPOOPERACION = mtto.VALOR
						INNER JOIN (SELECT
										det.DESCRIPCION,
										val.VALOR
									FROM
										PARAMETRO par
										INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO
										INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '004'
									) mttc ON o.TIPOCLIENTE = mttc.VALOR

						LEFT JOIN DIVISA dp ON dp.ID = o.IDDIVISAPRIMA
						LEFT JOIN DIVISA dex ON dex.ID = o.IDMONEDAEXTRANJERA
					WHERE
						o.ESTADO = 'L'
                        AND (o.IDDIVISAENTRADA = V_IDDIVISA OR o.IDDIVISASALIDA = V_IDDIVISA)
                        AND NVL(o.CODIGOREPORTE,' ') <> ' '
                        AND TRIM(o.TIPOPROCESO) = 'D'
                        AND o.CODIGOESTADO = 1

                        AND NVL(p.CODIGOBCR,' ') = V_CODIGOBCR
                        AND NVL(TRIM(o.TIPOOPERACION),' ') = V_TIPOOPERACION
                        AND NVL(c.TIPOCLIENTE,' ') = V_TIPOCLIENTE
                        AND NVL(o.RESIDENTE,' ') = CASE WHEN V_RESIDENTE = 'A' THEN NVL(o.RESIDENTE,' ') ELSE  V_RESIDENTE END
                        AND NVL(p.TIPOENTREGA,' ') = V_TIPOENTREGA
                        AND NVL(o.CALLPUT,' ') = V_CALLPUT
                        AND TO_DATE(TO_CHAR(o.FECHACONTRATACION, 'dd/mm/yyyy')) <= TO_DATE(TO_CHAR(P_FECHA,'dd/mm/yyyy'))
                        AND TO_DATE(TO_CHAR(o.FECHAVENCIMIENTO, 'dd/mm/yyyy')) > TO_DATE(TO_CHAR(P_FECHA,'dd/mm/yyyy'))
                        AND TO_DATE(TO_CHAR(o.FECHAMOVIMIENTO, 'dd/mm/yyyy')) <= TO_DATE(TO_CHAR(P_FECHA,'dd/mm/yyyy'))
                        AND p.id NOT IN  (SELECT ID FROM PRODUCTO WHERE CODIGO='IRC')
                        AND o.NUMEROOPERACION NOT IN (
										SELECT NUMEROOPERACION
										FROM OPERACION
										WHERE
											ESTADO = 'A'
											AND TO_DATE(TO_CHAR(FECHAMOVIMIENTO, 'dd/mm/yyyy')) <= TO_DATE(TO_CHAR(P_FECHA,'dd/mm/yyyy'))
											AND TRIM(TIPOPROCESO) = 'D'
									)
				) OPETEMP ORDER BY OPETEMP.CODIGOREPORTE ASC , OPETEMP.OPERACION ASC;

ELSIF P_TIPOPROCESO ='A' THEN
    OPEN CURSOR_ FOR
        SELECT
			OPETEMP.PRODUCTO,
			OPETEMP.OPERACION AS NUMEROOPERACION,
			OPETEMP.CODIGOREPORTE,
			OPETEMP.CLIENTE,
			OPETEMP.NOMBRE,
			OPETEMP.TIPO,
			OPETEMP.DIVENTRADA,
			OPETEMP.DIVSALIDA,
			OPETEMP.IMPENTRADA,
			OPETEMP.IMPSALIDA,
			OPETEMP.TIPOCAMBIO,
			OPETEMP.VALIDACION,
			TO_CHAR(OPETEMP.CONTRATACION,'dd/mm/yyyy') AS CONTRATACION,
			TO_CHAR(OPETEMP.VALOR,'dd/mm/yyyy') AS VALOR,
			TO_CHAR(OPETEMP.VENCIMIENTO,'dd/mm/yyyy') AS VENCIMIENTO,
			OPETEMP.IMPORTEUSD,
			OPETEMP.TIPOCLIENTE
		FROM	(	SELECT

						p.CODIGO AS PRODUCTO,
						o.NUMEROOPERACION AS OPERACION,
						o.CODIGOREPORTE ,
						c.CODIGO AS CLIENTE,
						c.NOMBRE,
						mtto.DESCRIPCION AS TIPO,
						de.CODIGO AS DIVENTRADA,
						ds.CODIGO AS DIVSALIDA,
						o.IMPORTEDIVISAENTRADA AS IMPENTRADA,
						o.IMPORTEDIVISASALIDA AS IMPSALIDA,
						o.CAMBIOREF AS TIPOCAMBIO,
						o.VALIDACION,
						o.FECHACONTRATACION AS CONTRATACION,
						o.FECHAVALOR AS VALOR,
						o.FECHAVENCIMIENTO AS VENCIMIENTO,
						o.IMPORTEUSD,
						mttc.DESCRIPCION AS TIPOCLIENTE,
						o.ESTADO

					FROM
						OPERACION o
						INNER JOIN PRODUCTO p ON p.ID = o.ID_PRODUCTO
						INNER JOIN CLIENTE c ON c.ID = o.ID_CLIENTE
						INNER JOIN DIVISA de ON de.ID = o.IDDIVISAENTRADA
						INNER JOIN DIVISA ds ON ds.ID = o.IDDIVISASALIDA
						INNER JOIN (SELECT
										det.DESCRIPCION,
										val.VALOR
									FROM
										PARAMETRO par
										INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO
										INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '002'
									) mtto ON o.TIPOOPERACION = mtto.VALOR
						INNER JOIN (SELECT
										det.DESCRIPCION,
										val.VALOR
									FROM
										PARAMETRO par
										INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO
										INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '004'
									) mttc ON o.TIPOCLIENTE = mttc.VALOR

						LEFT JOIN DIVISA dp ON dp.ID = o.IDDIVISAPRIMA
						LEFT JOIN DIVISA dex ON dex.ID = o.IDMONEDAEXTRANJERA
					WHERE
						o.ESTADO = 'L'
                        AND (o.IDDIVISAENTRADA = V_IDDIVISA OR o.IDDIVISASALIDA = V_IDDIVISA)
                        AND NVL(o.CODIGOREPORTE,' ') <> ' '
                        AND TRIM(o.TIPOPROCESO) = 'D'
                        AND o.CODIGOESTADO = 1

                        AND NVL(p.CODIGOBCR,' ') = V_CODIGOBCR
                        AND NVL(TRIM(o.TIPOOPERACION),' ') = V_TIPOOPERACION
                        AND NVL(c.TIPOCLIENTE,' ') = V_TIPOCLIENTE
                        AND NVL(o.RESIDENTE,' ') = CASE WHEN V_RESIDENTE = 'A' THEN NVL(o.RESIDENTE,' ') ELSE  V_RESIDENTE END
                        AND NVL(p.TIPOENTREGA,' ') = V_TIPOENTREGA
                        AND NVL(o.CALLPUT,' ') = V_CALLPUT
                        AND TO_DATE(TO_CHAR(o.FECHACONTRATACION, 'dd/mm/yyyy')) < TO_DATE(TO_CHAR(P_FECHA,'dd/mm/yyyy'))
                        AND TO_DATE(TO_CHAR(o.FECHAVENCIMIENTO, 'dd/mm/yyyy')) > TO_DATE(TO_CHAR(P_FECHA,'dd/mm/yyyy'))
                        AND TO_DATE(TO_CHAR(o.FECHAMOVIMIENTO, 'dd/mm/yyyy')) < TO_DATE(TO_CHAR(P_FECHA,'dd/mm/yyyy'))
                        AND p.id NOT IN  (SELECT ID FROM PRODUCTO WHERE CODIGO='IRC')
                        AND o.NUMEROOPERACION NOT IN (
										SELECT NUMEROOPERACION
										FROM OPERACION
										WHERE
											ESTADO = 'A'
											AND TO_DATE(TO_CHAR(FECHAMOVIMIENTO, 'dd/mm/yyyy')) < TO_DATE(TO_CHAR(P_FECHA,'dd/mm/yyyy'))
											AND TRIM(TIPOPROCESO) = 'D'
									)
                UNION ALL

                SELECT

						p.CODIGO AS PRODUCTO,
						o.NUMEROOPERACION AS OPERACION,
						o.CODIGOREPORTE ,
						c.CODIGO AS CLIENTE,
						c.NOMBRE,
						mtto.DESCRIPCION AS TIPO,
						de.CODIGO AS DIVENTRADA,
						ds.CODIGO AS DIVSALIDA,
						o.IMPORTEDIVISAENTRADA AS IMPENTRADA,
						o.IMPORTEDIVISASALIDA AS IMPSALIDA,
						o.CAMBIOREF AS TIPOCAMBIO,
						o.VALIDACION,
						o.FECHACONTRATACION AS CONTRATACION,
						o.FECHAVALOR AS VALOR,
						o.FECHAVENCIMIENTO AS VENCIMIENTO,
						o.IMPORTEUSD,
						mttc.DESCRIPCION AS TIPOCLIENTE,
						o.ESTADO

					FROM
						OPERACION o
						INNER JOIN PRODUCTO p ON p.ID = o.ID_PRODUCTO
						INNER JOIN CLIENTE c ON c.ID = o.ID_CLIENTE
						INNER JOIN DIVISA de ON de.ID = o.IDDIVISAENTRADA
						INNER JOIN DIVISA ds ON ds.ID = o.IDDIVISASALIDA
						INNER JOIN (SELECT
										det.DESCRIPCION,
										val.VALOR
									FROM
										PARAMETRO par
										INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO
										INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '002'
									) mtto ON o.TIPOOPERACION = mtto.VALOR
						INNER JOIN (SELECT
										det.DESCRIPCION,
										val.VALOR
									FROM
										PARAMETRO par
										INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO
										INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '004'
									) mttc ON o.TIPOCLIENTE = mttc.VALOR

					WHERE
						o.ESTADO = 'L'
                        AND (o.IDDIVISAENTRADA = V_IDDIVISA OR o.IDDIVISASALIDA = V_IDDIVISA)
                        AND NVL(o.CODIGOREPORTE,' ') <> ' '
                        AND TRIM(o.TIPOPROCESO) = P_TIPOPROCESO
                        AND o.CODIGOESTADO = 1

                        AND NVL(p.CODIGOBCR,' ') = V_CODIGOBCR
                        AND NVL(TRIM(o.TIPOOPERACION),' ') = V_TIPOOPERACION
                        AND NVL(c.TIPOCLIENTE,' ') = V_TIPOCLIENTE
                        AND NVL(o.RESIDENTE,' ') = CASE WHEN V_RESIDENTE = 'A' THEN NVL(o.RESIDENTE,' ') ELSE  V_RESIDENTE END
                        AND NVL(p.TIPOENTREGA,' ') = V_TIPOENTREGA
                        AND NVL(o.CALLPUT,' ') = V_CALLPUT

                        AND TO_CHAR(o.FECHACONTRATACION, 'dd/mm/yyyy') = TO_CHAR(P_FECHA, 'dd/mm/yyyy')
                        AND TO_DATE(TO_CHAR(o.FECHAVENCIMIENTO, 'dd/mm/yyyy')) > TO_DATE(TO_CHAR(P_FECHA,'dd/mm/yyyy'))
                        AND TO_CHAR(o.FECHAMOVIMIENTO, 'dd/mm/yyyy') = TO_CHAR(P_FECHA,'dd/mm/yyyy')
                        AND p.id NOT IN  (SELECT ID FROM PRODUCTO WHERE CODIGO='IRC')
                        AND o.NUMEROOPERACION NOT IN (
										SELECT NUMEROOPERACION
										FROM OPERACION
										WHERE
											ESTADO = 'A'
											AND TO_DATE(TO_CHAR(FECHAMOVIMIENTO, 'dd/mm/yyyy')) <= TO_DATE(TO_CHAR(P_FECHA,'dd/mm/yyyy'))
											AND TRIM(TIPOPROCESO) = P_TIPOPROCESO
									)

				) OPETEMP ORDER BY OPETEMP.CODIGOREPORTE ASC;
    END IF;
END;
/
--------------------------------------------------------
--  DDL for Procedure SP_BCR_REPORTE8_ANEXO8
--------------------------------------------------------
create PROCEDURE  "PCBCRP"."SP_BCR_REPORTE8_ANEXO8" (
P_IDSALDODERIVADOS  	IN VARCHAR2,
P_FECHA                 IN DATE,
P_TIPOPROCESO           IN VARCHAR2,
CURSOR_ 	OUT SYS_REFCURSOR
)

AS

V_CODIGOOPERACION       VARCHAR2(4);

BEGIN
    SELECT CODIGOOPERACION INTO V_CODIGOOPERACION FROM SALDO_DERIVADOS WHERE ID = P_IDSALDODERIVADOS;

    IF V_CODIGOOPERACION = '0603' THEN
        OPEN CURSOR_ FOR

         SELECT
			OPETEMP.PRODUCTO,
            OPETEMP.NUMEROOPERACION,
			OPETEMP.CODIGOREPORTE,
			OPETEMP.CLIENTE,
			OPETEMP.NOMBRE,
            OPETEMP.TIPODOCUMENTO,
            OPETEMP.TIPOCLIENTE,
            OPETEMP.VALIDACION,
            MAX(TO_CHAR(OPETEMP.CONTRATACION,'dd/mm/yyyy')) AS CONTRATACION,
            MAX(TO_CHAR(OPETEMP.VENCIMIENTO,'dd/mm/yyyy')) AS VENCIMIENTO,
			SUM(OPETEMP.IMPORTEUSD) AS IMPORTEUSD,
            OPETEMP.ESTADO

		FROM	(
            SELECT
                p.CODIGO AS PRODUCTO,
                SUBSTR(o.NUMEROOPERACION,0, LENGTH(o.NUMEROOPERACION)-3) AS NUMEROOPERACION,
                o.CODIGOREPORTE ,
                c.CODIGO AS CLIENTE,
                c.NOMBRE,
                c.TIPODOCUMENTO,
                o.TIPOCLIENTE,
                '' AS VALIDACION,
                o.FECHACONTRATACION AS CONTRATACION,
                o.FECHAVENCIMIENTO AS VENCIMIENTO,
                o.IMPORTEUSD,
                '' AS ESTADO
            FROM TASA_INTERES o
                INNER JOIN PRODUCTO p ON p.ID = o.ID_PRODUCTO
                INNER JOIN CLIENTE c ON c.ID = o.ID_CLIENTE
                INNER JOIN DIVISA de ON de.ID = o.IDDIVISAENTRADA
                INNER JOIN DIVISA ds ON ds.ID = o.IDDIVISASALIDA
                LEFT JOIN DIVISA dp ON dp.ID = o.IDDIVISAPRIMA
                LEFT JOIN DIVISA dex ON dex.ID = o.IDMONEDAEXTRANJERA
            WHERE
                o.ESTADO <> 'A' --Anulada
                AND o.CODIGOESTADO = 1
                AND TO_DATE(TO_CHAR(o.FECHAMOVIMIENTO, 'dd/mm/yyyy')) <= TO_DATE(TO_CHAR(P_FECHA, 'dd/mm/yyyy'))
                --QUITO LAS VENCIDAS
                AND TO_DATE(TO_CHAR(o.FECHAVENCIMIENTO, 'dd/mm/yyyy')) > TO_DATE(TO_CHAR(P_FECHA, 'dd/mm/yyyy'))
                AND o.TIPOPROCESO = 'D'
                AND o.ID_PRODUCTO = (SELECT p.ID FROM PRODUCTO p WHERE p.CODIGO = 'IRD') --@i_idProductoIRD
            )OPETEMP
               GROUP BY OPETEMP.PRODUCTO, OPETEMP.NUMEROOPERACION, OPETEMP.CODIGOREPORTE, OPETEMP.CLIENTE, OPETEMP.NOMBRE,
                 OPETEMP.TIPODOCUMENTO,OPETEMP.TIPOCLIENTE,OPETEMP.VALIDACION, OPETEMP.ESTADO
                ORDER BY OPETEMP.NUMEROOPERACION, OPETEMP.CODIGOREPORTE ASC;

    ELSIF V_CODIGOOPERACION = '0706' THEN
        OPEN CURSOR_ FOR
            SELECT
                p.CODIGO AS PRODUCTO,
                o.NUMEROOPERACION AS NUMEROOPERACION,
                o.CODIGOREPORTE ,
                c.CODIGO AS CLIENTE,
                c.NOMBRE,
                c.TIPODOCUMENTO,
                o.TIPOCLIENTE,
                '' AS  VALIDACION,
                o.FECHAREPORTE AS CONTRATACION,
                o.FECHATERMINO AS VENCIMIENTO,
                o.IMPORTEUSD,
                '' AS ESTADO

            FROM OPERACION_DERIVADO o
                INNER JOIN PRODUCTO p ON p.ID = o.ID_PRODUCTO
                INNER JOIN CLIENTE c ON c.ID = o.ID_CLIENTE
                INNER JOIN DIVISA d ON d.ID = o.IDDIVISA
            WHERE
                o.CODIGOESTADO = 1
                AND TO_DATE(TO_CHAR(o.FECHAMOVIMIENTO, 'dd/mm/yyyy')) <= TO_DATE(TO_CHAR(P_FECHA, 'dd/mm/yyyy'))
                --QUITO LAS VENCIDAS
                AND TO_DATE(TO_CHAR(o.FECHATERMINO, 'dd/mm/yyyy')) > TO_DATE(TO_CHAR(P_FECHA, 'dd/mm/yyyy'))
                AND o.TIPOPROCESO = 'D'
                AND o.ID_PRODUCTO IN (SELECT p.ID FROM PRODUCTO p WHERE p.CODIGO IN ('ODIV'))
                AND c.CODIGO NOT IN ('PER013597')
                ORDER BY o.NUMEROOPERACION, o.CODIGOREPORTE;

    ELSIF V_CODIGOOPERACION = '0799' THEN
        OPEN CURSOR_ FOR
            SELECT
                p.CODIGO AS PRODUCTO,
                o.NUMEROOPERACION AS NUMEROOPERACION,
                o.CODIGOREPORTE ,
                c.CODIGO AS CLIENTE,
                c.NOMBRE,
                c.TIPODOCUMENTO,
                o.TIPOCLIENTE,
                '' AS VALIDACION,
                o.FECHAREPORTE AS CONTRATACION,
                o.FECHATERMINO AS VENCIMIENTO,
                o.IMPORTEUSD,
                '' AS ESTADO
            FROM OPERACION_DERIVADO o
                INNER JOIN PRODUCTO p ON p.ID = o.ID_PRODUCTO
                INNER JOIN CLIENTE c ON c.ID = o.ID_CLIENTE
                INNER JOIN DIVISA d ON d.ID = o.IDDIVISA
            WHERE
                o.CODIGOESTADO = 1
                AND TO_DATE(TO_CHAR(o.FECHAMOVIMIENTO, 'dd/mm/yyyy')) <= TO_DATE(TO_CHAR(P_FECHA, 'dd/mm/yyyy'))
                --QUITO LAS VENCIDAS
                AND TO_DATE(TO_CHAR(o.FECHATERMINO, 'dd/mm/yyyy')) > TO_DATE(TO_CHAR(P_FECHA, 'dd/mm/yyyy'))
                AND o.TIPOPROCESO = 'D'
                AND o.ID_PRODUCTO IN (SELECT p.ID FROM PRODUCTO p WHERE p.CODIGO IN ('OTO'))
                ORDER BY o.NUMEROOPERACION, o.CODIGOREPORTE;

    END IF;
END;
/
--------------------------------------------------------
--  DDL for Procedure SP_BCR_REPORTE8_OPERACIONES
--------------------------------------------------------
create PROCEDURE  "PCBCRP"."SP_BCR_REPORTE8_OPERACIONES" (
P_IDSALDODERIVADOS  	IN VARCHAR2,
P_FECHA                 IN DATE,
P_TIPOPROCESO           IN VARCHAR2,
CURSOR_ 	OUT SYS_REFCURSOR
)

AS

V_CODIGOOPERACION       VARCHAR2(4);

BEGIN
    SELECT CODIGOOPERACION INTO V_CODIGOOPERACION FROM SALDO_DERIVADOS WHERE ID = P_IDSALDODERIVADOS;

    IF V_CODIGOOPERACION = '0603' THEN
        OPEN CURSOR_ FOR
            SELECT
                p.CODIGO AS PRODUCTO,
                o.NUMEROOPERACION AS NUMEROOPERACION,
                o.CODIGOREPORTE ,
                c.CODIGO AS CLIENTE,
                c.NOMBRE,
                c.TIPODOCUMENTO,
                o.TIPOCLIENTE,
                o.VALIDACION,
                o.FECHACONTRATACION AS CONTRATACION,
                o.FECHAVENCIMIENTO AS VENCIMIENTO,
                o.IMPORTEUSD,
                o.ESTADO
            FROM TASA_INTERES o
                INNER JOIN PRODUCTO p ON p.ID = o.ID_PRODUCTO
                INNER JOIN CLIENTE c ON c.ID = o.ID_CLIENTE
                INNER JOIN DIVISA de ON de.ID = o.IDDIVISAENTRADA
                INNER JOIN DIVISA ds ON ds.ID = o.IDDIVISASALIDA
                LEFT JOIN DIVISA dp ON dp.ID = o.IDDIVISAPRIMA
                LEFT JOIN DIVISA dex ON dex.ID = o.IDMONEDAEXTRANJERA
            WHERE
                o.ESTADO <> 'A' --Anulada
                AND o.CODIGOESTADO = 1
                AND TO_DATE(TO_CHAR(o.FECHAMOVIMIENTO, 'dd/mm/yyyy')) <= TO_DATE(TO_CHAR(P_FECHA, 'dd/mm/yyyy'))
                --QUITO LAS VENCIDAS
                AND TO_DATE(TO_CHAR(o.FECHAVENCIMIENTO, 'dd/mm/yyyy')) > TO_DATE(TO_CHAR(P_FECHA, 'dd/mm/yyyy'))
                AND o.TIPOPROCESO = 'D'
                AND o.ID_PRODUCTO = (SELECT p.ID FROM PRODUCTO p WHERE p.CODIGO = 'IRD') --@i_idProductoIRD
                ORDER BY o.NUMEROOPERACION, o.CODIGOREPORTE ASC;

    ELSIF V_CODIGOOPERACION = '0706' THEN
        OPEN CURSOR_ FOR
            SELECT
                p.CODIGO AS PRODUCTO,
                o.NUMEROOPERACION AS NUMEROOPERACION,
                o.CODIGOREPORTE ,
                c.CODIGO AS CLIENTE,
                c.NOMBRE,
                c.TIPODOCUMENTO,
                o.TIPOCLIENTE,
                '' AS  VALIDACION,
                o.FECHAREPORTE AS CONTRATACION,
                o.FECHATERMINO AS VENCIMIENTO,
                o.IMPORTEUSD,
                '' AS ESTADO

            FROM OPERACION_DERIVADO o
                INNER JOIN PRODUCTO p ON p.ID = o.ID_PRODUCTO
                INNER JOIN CLIENTE c ON c.ID = o.ID_CLIENTE
                INNER JOIN DIVISA d ON d.ID = o.IDDIVISA
            WHERE
                o.CODIGOESTADO = 1
                AND TO_DATE(TO_CHAR(o.FECHAMOVIMIENTO, 'dd/mm/yyyy')) <= TO_DATE(TO_CHAR(P_FECHA, 'dd/mm/yyyy'))
                --QUITO LAS VENCIDAS
                AND TO_DATE(TO_CHAR(o.FECHATERMINO, 'dd/mm/yyyy')) > TO_DATE(TO_CHAR(P_FECHA, 'dd/mm/yyyy'))
                AND o.TIPOPROCESO = 'D'
                AND o.ID_PRODUCTO IN (SELECT p.ID FROM PRODUCTO p WHERE p.CODIGO IN ('ODIV'))
                AND c.CODIGO NOT IN ('PER013597')
                ORDER BY o.NUMEROOPERACION, o.CODIGOREPORTE ASC;

    ELSIF V_CODIGOOPERACION = '0799' THEN
        OPEN CURSOR_ FOR
            SELECT
                p.CODIGO AS PRODUCTO,
                o.NUMEROOPERACION AS NUMEROOPERACION,
                o.CODIGOREPORTE ,
                c.CODIGO AS CLIENTE,
                c.NOMBRE,
                c.TIPODOCUMENTO,
                o.TIPOCLIENTE,
                '' AS VALIDACION,
                o.FECHAREPORTE AS CONTRATACION,
                o.FECHATERMINO AS VENCIMIENTO,
                o.IMPORTEUSD,
                '' AS ESTADO
            FROM OPERACION_DERIVADO o
                INNER JOIN PRODUCTO p ON p.ID = o.ID_PRODUCTO
                INNER JOIN CLIENTE c ON c.ID = o.ID_CLIENTE
                INNER JOIN DIVISA d ON d.ID = o.IDDIVISA
            WHERE
                o.CODIGOESTADO = 1
                AND TO_DATE(TO_CHAR(o.FECHAMOVIMIENTO, 'dd/mm/yyyy')) <= TO_DATE(TO_CHAR(P_FECHA, 'dd/mm/yyyy'))
                --QUITO LAS VENCIDAS
                AND TO_DATE(TO_CHAR(o.FECHATERMINO, 'dd/mm/yyyy')) > TO_DATE(TO_CHAR(P_FECHA, 'dd/mm/yyyy'))
                AND o.TIPOPROCESO = 'D'
                AND o.ID_PRODUCTO IN (SELECT p.ID FROM PRODUCTO p WHERE p.CODIGO IN ('OTO'))
                ORDER BY o.NUMEROOPERACION, o.CODIGOREPORTE ASC;
    END IF;
END;
/
GRANT EXECUTE ON "PCBCRP"."SP_BCR_REPORTE4_OPERACIONES" TO "APP_PCBCRP";
GRANT EXECUTE ON "PCBCRP"."SP_BCR_REPORTE4_ANEXO8_IRC" TO "APP_PCBCRP";
GRANT EXECUTE ON "PCBCRP"."SP_BCR_REPORTE4_ANEXO8" TO "APP_PCBCRP";
GRANT EXECUTE ON "PCBCRP"."SP_BCR_REPORTE8_ANEXO8" TO "APP_PCBCRP";
GRANT EXECUTE ON "PCBCRP"."SP_BCR_REPORTE8_OPERACIONES" TO "APP_PCBCRP";
-- FIN SEBASTIAN

-------------------------------------------------------DDDDDD


-- INICIO CPASCOS

--------------------------------------------------------
--  DELETE STORED PROCEDURES
--------------------------------------------------------
DROP PROCEDURE "PCBCRP"."SP_BCR_CLIENTE_LISTAR";
DROP PROCEDURE "PCBCRP"."SP_BCR_OPERACION_UNWIND";

--------------------------------------------------------
--  DDL for Procedure SP_BCR_CLIENTE_LISTAR
--------------------------------------------------------

create PROCEDURE "PCBCRP"."SP_BCR_CLIENTE_LISTAR" (
P_CODIGO 				IN VARCHAR2,
P_NOMBRE         		IN VARCHAR2,
P_TIPOCLIENTE          	IN VARCHAR2,
P_CLIENTENOREGISTRADO   IN VARCHAR2,
CURSOR_ 				OUT SYS_REFCURSOR
)
AS

BEGIN
   IF P_CLIENTENOREGISTRADO <> 'S' THEN
        OPEN CURSOR_ FOR
		SELECT 
			cli.ID,         
			cli.CODIGO,
			cli.NOMBRE,
			cli.ENTIDAD,
			cli.PAISRESIDENCIA AS PAISRESIDENCIA,
			pr.DESCRIPCION AS PAISRESIDENCIADESC,
			cli.RIESGOPAIS AS RIESGOPAIS,
			rp.DESCRIPCION AS RIESGOPAISDESC,
			cli.ALTAMIRA,
			cli.PLAZA,
			RTRIM(LTRIM(cli.SECTOR)) AS SECTOR,
			cli.NOMBRECORTO,
			cli.RECHAZARCARGA AS RECHAZARCARGA,
			cc.DESCRIPCION AS RECHAZARCARGADESC,
			cli.TIPOCLIENTE AS TIPOCLIENTE,
			tc.DESCRIPCION AS TIPOCLIENTEDESC,
			cli.TIPODOCUMENTO AS TIPODOCUMENTO,
			td.DESCRIPCION AS TIPODOCUMENTODESC,
			cli.NUMERODOCUMENTO,
			cli.CODIGOSWIFT,
			cli.CODIGOESTADO
		FROM 
			CLIENTE cli
				LEFT JOIN (SELECT 
								det.DESCRIPCION, 
								val.VALOR 
							FROM 
								PARAMETRO par 
									INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO 
									INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '007') pr ON cli.PAISRESIDENCIA = pr.VALOR --Tipo Pais

				LEFT JOIN (SELECT 
								det.DESCRIPCION, 
								val.VALOR 
							FROM 
								PARAMETRO par 
									INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO 
									INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '007') rp ON cli.RIESGOPAIS = rp.VALOR --Tipo Pais

				LEFT JOIN (SELECT 
								det.DESCRIPCION, 
								val.VALOR 
							FROM 
								PARAMETRO par 
									INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO 
									INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '009') cc ON cli.RECHAZARCARGA = cc.VALOR --Carga Cliente

				LEFT JOIN (SELECT 
								det.DESCRIPCION, 
								val.VALOR 
							FROM 
								PARAMETRO par 
									INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO 
									INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '004') tc ON cli.TIPOCLIENTE = tc.VALOR --Tipo Cliente  
				LEFT JOIN (SELECT 
								det.DESCRIPCION, 
								val.VALOR 
							FROM 
								PARAMETRO par 
									INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO 
									INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '040') td ON cli.TIPODOCUMENTO = td.VALOR --Tipo Documento 
		WHERE 
			cli.CODIGOESTADO = 1 
			AND cli.CODIGO LIKE '%' || NVL(P_CODIGO,'') || '%' 
            AND UPPER(cli.NOMBRE) LIKE '%' || UPPER(NVL(P_NOMBRE,'')) || '%' 
			AND cli.TIPOCLIENTE = 
                CASE 
                    WHEN P_TIPOCLIENTE = '-2' THEN cli.TIPOCLIENTE 
                    ELSE P_TIPOCLIENTE 
                END;

	ELSE
        OPEN CURSOR_ FOR
		SELECT 
			cli.ID,         
			cli.CODIGO,
			cli.NOMBRE,
			cli.ENTIDAD,
			cli.PAISRESIDENCIA AS PAISRESIDENCIA,
			pr.DESCRIPCION AS PAISRESIDENCIADESC,
			cli.RIESGOPAIS AS RIESGOPAIS,
			rp.DESCRIPCION AS RIESGOPAISDESC,
			cli.ALTAMIRA,
			cli.PLAZA,
			RTRIM(LTRIM(cli.SECTOR)) AS SECTOR,
			cli.NOMBRECORTO,
			cli.RECHAZARCARGA AS RECHAZARCARGA,
			cc.DESCRIPCION AS RECHAZARCARGADESC,
			cli.TIPOCLIENTE AS TIPOCLIENTE,
			tc.DESCRIPCION as TIPOCLIENTEDESC,
			cli.TIPODOCUMENTO AS TIPODOCUMENTO,
			td.DESCRIPCION AS TIPODOCUMENTODESC,
			cli.NUMERODOCUMENTO,
			cli.CODIGOSWIFT,
			cli.CODIGOESTADO		
		FROM 
			CLIENTE cli
				LEFT JOIN (SELECT 
								det.DESCRIPCION, 
								val.VALOR 
							FROM 
								PARAMETRO par 
									INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO 
									INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '007') pr ON cli.PAISRESIDENCIA = pr.VALOR --Tipo Pais

				LEFT JOIN (SELECT 
								det.DESCRIPCION, 
								val.VALOR 
							FROM 
								PARAMETRO par 
									INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO 
									INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '007') rp ON cli.RIESGOPAIS = rp.VALOR --Tipo Pais

				LEFT JOIN (SELECT 
								det.DESCRIPCION, 
								val.VALOR 
							FROM 
								PARAMETRO par 
									INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO 
									INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '009') cc ON cli.RECHAZARCARGA = cc.VALOR --Carga Cliente

				LEFT JOIN (SELECT 
								det.DESCRIPCION, 
								val.VALOR 
							FROM 
								PARAMETRO par 
									INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO 
									INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '004') tc ON cli.TIPOCLIENTE = tc.VALOR --Tipo Cliente   
				LEFT JOIN (SELECT 
								det.DESCRIPCION, 
								val.VALOR 
							FROM 
								PARAMETRO par 
									INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO 
									INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '040') td ON cli.TIPODOCUMENTO = td.VALOR --Tipo Documento
		WHERE 
			cli.CODIGOESTADO = 1 
			AND cli.CODIGO LIKE '%' || NVL(P_CODIGO,'') || '%' 
            AND UPPER(cli.NOMBRE) LIKE '%' ||  UPPER(NVL(P_NOMBRE,'')) || '%' 
			AND cli.TIPOCLIENTE = CASE WHEN P_TIPOCLIENTE = '-2' THEN cli.TIPOCLIENTE ELSE P_TIPOCLIENTE END
			AND (cli.CODIGO is null
			OR cli.NOMBRE is null
			OR cli.ENTIDAD is null
			OR cli.PAISRESIDENCIA is null
			OR cli.SECTOR is null
            OR cli.TIPODOCUMENTO is null);
	END IF;
END;

/

--------------------------------------------------------
--  DDL for Procedure SP_BCR_OPERACION_UNWIND
--------------------------------------------------------
create PROCEDURE "PCBCRP"."SP_BCR_OPERACION_UNWIND" (

P_IDCARGA 					IN VARCHAR2,
P_FECHACONTRATACION 		IN DATE,
P_IDPRODUCTO 				IN VARCHAR2,
P_NUMEROOPERACION 			IN VARCHAR2,
P_IDCLIENTE 				IN VARCHAR2,
P_TIPOOPERACION         	IN VARCHAR2,
P_IDDIVISAENTRADA 			IN VARCHAR2,
P_IDDIVISASALIDA 			IN VARCHAR2,
P_IMPORTEDIVISAENTRADA 		IN NUMBER,
P_IMPORTEDIVISASALIDA 		IN NUMBER,
P_COTIZACION 				IN NUMBER,
P_PUNTOSSWAP 				IN NUMBER,
P_BASICA 					IN VARCHAR2,
P_CAMBIOREF 				IN NUMBER,
P_FECHAVALOR 				IN DATE,
P_FECHAVENCIMIENTO 			IN DATE,
P_PLAZO 					IN NUMBER,
P_FECHAEJERCICIO 			IN DATE,
P_CALLPUT 					IN VARCHAR2,
P_PLAZA 					IN VARCHAR2,
P_PAISRESIDENCIA 			IN VARCHAR2,
P_RIESGOPAIS 				IN VARCHAR2,
P_PRIMA 					IN NUMBER,
P_IDDIVISAPRIMA 			IN VARCHAR2,
P_OBSERVACIONES 			IN VARCHAR2,
P_FECHAALTA 				IN DATE,
P_FECHAMODIFICACIONCARGA 	IN DATE,
P_OPERACIONSUSTITUYE 		IN VARCHAR2,
P_FECHABAJA 				IN DATE,
P_NIF 						IN VARCHAR2,
P_INTERMEDIARIO 			IN VARCHAR2,
P_INTERMEDIARIODESCRIPCION 	IN VARCHAR2,
P_ESTADO 					IN VARCHAR2,
P_CONTRATO 					IN VARCHAR2,
P_RESIDENTE 				IN VARCHAR2,
P_ESTILO 					IN VARCHAR2,
P_TIPOOPCION 				IN VARCHAR2,
P_TIPOPROCESO 				IN VARCHAR2,
P_HISTORICO 				IN NUMBER,
P_FECHAMOVIMIENTO 			IN DATE,
P_USUARIOCARGA 				IN VARCHAR2,
P_CODIGOOPERACION 			IN VARCHAR2,
P_IMPORTEUSD 				IN NUMBER,
P_CODIGOREPORTE 			IN VARCHAR2,
P_TASAMONEDANACIONAL 		IN NUMBER,
P_MONTOMONEDAEXTRAJERA 		IN NUMBER,
P_TASADIFERENCIAL 			IN NUMBER,
P_DELTA 					IN NUMBER,
P_TASAMONEDAEXTRANJERA 		IN NUMBER,
P_IDMONEDAEXTRANJERA 		IN VARCHAR2,
P_MONTOPEN 					IN NUMBER,
P_TIPOCAMBIOSPOT 			IN NUMBER,
P_TIPOCAMBIOPACTADO 		IN NUMBER,
P_TIPOCAMBIOVENCIMIENTO 	IN NUMBER,
P_VALIDACION 				IN VARCHAR2,
P_CODIGOAGRUPACION 			IN VARCHAR2,
P_TIPOCLIENTE 				IN VARCHAR2,
P_IDFILAARCHIVO 			IN NUMBER,

P_TIPOCARGA 				IN NUMBER,
P_TIPOACCION 				IN VARCHAR2,
P_USUARIOCREACION 			IN VARCHAR2

)

AS

V_IDTEMP                    VARCHAR2(255) := '';
V_CORRELATIVO				VARCHAR2(12) := '';
V_NUMEROOPERACION 			VARCHAR2(20);
V_HISTORICO					NUMBER;
V_COUNT 					NUMBER;
V_CODIGOESTADO 				NUMBER;
V_TASAMONEDANACIONAL 		NUMBER;
V_TASAMONEDAEXTRANJERA 		NUMBER;
V_MSG_EXCEP   		    	EXCEPTION;
V_ERROR                     VARCHAR2(500) := '';

BEGIN
	IF (P_TIPOCARGA = 7 AND P_ESTADO != 'A') THEN -- identificador IRC
		V_NUMEROOPERACION := FN_BCR_OPERACION_GENERAIRC('IRC', P_NUMEROOPERACION);
		V_HISTORICO := 0;
	ELSE
		V_NUMEROOPERACION := P_NUMEROOPERACION;

		-- obtenemos el ultimo valor historico
		SELECT MAX(HISTORICO) INTO V_HISTORICO
		FROM OPERACION
		WHERE NUMEROOPERACION = V_NUMEROOPERACION AND TIPOPROCESO = P_TIPOPROCESO;
	END IF;


	-- verificamos si ya existe un registro para la operacion Inforeport
	IF NVL(V_HISTORICO, 0) =  0 THEN
		V_HISTORICO := 1;
	ELSE
		--Obttenmos el estado del ultimo historico
		SELECT CODIGOESTADO INTO V_CODIGOESTADO
		FROM OPERACION
		WHERE
			NUMEROOPERACION = V_NUMEROOPERACION
			AND HISTORICO = V_HISTORICO
			AND TIPOPROCESO = P_TIPOPROCESO;

		--Si el ultimo historico a sido eliminado
		IF V_CODIGOESTADO = 2 THEN -- Eliminado
			V_HISTORICO := V_HISTORICO + 1;
		ELSE
			-- verificamos si hay algun cambio en el ultimo registro
			SELECT
				COUNT(HISTORICO) INTO V_COUNT
			FROM
				OPERACION
			WHERE
				(
					TO_CHAR(FECHACONTRATACION, 'dd/mm/yyyy')  <> TO_CHAR(P_FECHACONTRATACION, 'dd/mm/yyyy')
					OR ID_PRODUCTO <> P_IDPRODUCTO
					OR NUMEROOPERACION <> V_NUMEROOPERACION
					OR ID_CLIENTE <> P_IDCLIENTE
					OR TIPOOPERACION <> P_TIPOOPERACION
					OR IDDIVISAENTRADA <> P_IDDIVISAENTRADA
					OR IDDIVISASALIDA <> P_IDDIVISASALIDA
					OR IMPORTEDIVISAENTRADA <> P_IMPORTEDIVISAENTRADA
					OR IMPORTEDIVISASALIDA <>  P_IMPORTEDIVISASALIDA
					OR COTIZACION <> P_COTIZACION
					OR PUNTOSSWAP <> P_PUNTOSSWAP
					OR BASICA <> P_BASICA
					OR CAMBIOREF <> P_CAMBIOREF
					OR TO_CHAR(FECHAVALOR, 'dd/mm/yyyy') <> TO_CHAR(P_FECHAVALOR, 'dd/mm/yyyy')
					OR TO_CHAR(FECHAVENCIMIENTO, 'dd/mm/yyyy') <> TO_CHAR(P_FECHAVENCIMIENTO, 'dd/mm/yyyy')
					OR PLAZO <> P_PLAZO
					OR TO_CHAR(FECHAEJERCICIO, 'dd/mm/yyyy')  <> TO_CHAR(P_FECHAEJERCICIO, 'dd/mm/yyyy')
					OR CALLPUT <> P_CALLPUT
					OR PLAZA <> P_PLAZA
					OR PAISRESIDENCIA <> P_PAISRESIDENCIA
					OR RIESGOPAIS <> P_RIESGOPAIS
					OR PRIMA <> P_PRIMA
					OR IDDIVISAPRIMA <> P_IDDIVISAPRIMA
					OR OBSERVACIONES <> P_OBSERVACIONES
					OR TO_CHAR(FECHAALTA, 'dd/mm/yyyy') <> TO_CHAR(P_FECHAALTA, 'dd/mm/yyyy')
					OR TO_CHAR(FECHAMODIFICACIONCARGA, 'dd/mm/yyyy') <> TO_CHAR(P_FECHAMODIFICACIONCARGA, 'dd/mm/yyyy')
					OR OPERACIONSUSTITUYE <> P_OPERACIONSUSTITUYE
					OR TO_CHAR(FECHABAJA, 'dd/mm/yyyy') <> TO_CHAR(P_FECHABAJA, 'dd/mm/yyyy')
					OR NIF <> P_NIF
					OR INTERMEDIARIO <> P_INTERMEDIARIO
					OR INTERMEDIARIODESCRIPCION <> P_INTERMEDIARIODESCRIPCION
					OR ESTADO <> P_ESTADO
					OR CONTRATO <> P_CONTRATO
					OR RESIDENTE <> P_RESIDENTE
					OR ESTILO <> P_ESTILO
					OR TIPOOPCION <> P_TIPOOPCION
					OR TO_CHAR(FECHAMOVIMIENTO, 'dd/mm/yyyy') <> TO_CHAR(P_FECHAMOVIMIENTO, 'dd/mm/yyyy')
					OR USUARIOCARGA <> P_USUARIOCARGA
					OR CODIGOOPERACION <> P_CODIGOOPERACION
					OR IMPORTEUSD <> P_IMPORTEUSD
					OR CODIGOREPORTE <> P_CODIGOREPORTE
					OR TASAMONEDANACIONAL <> P_TASAMONEDANACIONAL
					OR MONTOMONEDAEXTRANJERA <> P_MONTOMONEDAEXTRAJERA
					OR TASADIFERENCIAL <> P_TASADIFERENCIAL
					OR DELTA <> P_DELTA
					OR TASAMONEDAEXTRANJERA <> P_TASAMONEDAEXTRANJERA
					OR IDMONEDAEXTRANJERA <> P_IDMONEDAEXTRANJERA
					OR MONTOPEN <> P_MONTOPEN
					OR TIPOCAMBIOSPOT <> P_TIPOCAMBIOSPOT
					OR TIPOCAMBIOPACTADO <> P_TIPOCAMBIOPACTADO
					OR TIPOCAMBIOVENCIMIENTO <> P_TIPOCAMBIOVENCIMIENTO
					OR VALIDACION <> P_VALIDACION
					OR TIPOCLIENTE <> P_TIPOCLIENTE
				)
				AND HISTORICO = V_HISTORICO
				AND NUMEROOPERACION = V_NUMEROOPERACION
				AND TIPOPROCESO = P_TIPOPROCESO;


				IF (V_COUNT > 0) THEN
					--Eliminamos en forma logica la operacion anterior del la misma fecha de movimiento
					UPDATE OPERACION
					SET CODIGOESTADO = 2
					WHERE
						HISTORICO = V_HISTORICO
						AND NUMEROOPERACION = V_NUMEROOPERACION
						AND TIPOPROCESO = P_TIPOPROCESO
						AND TO_CHAR(FECHAMOVIMIENTO, 'dd/mm/yyyy') = TO_CHAR(P_FECHAMOVIMIENTO, 'dd/mm/yyyy');

					V_HISTORICO := V_HISTORICO + 1;
					COMMIT;
				ELSE
                    V_HISTORICO := NULL;  --para evitar q inserte el mismo registro 2 veces ya no se inserta
					V_ERROR := 'Existe un registro idéntico para la operación ' || V_NUMEROOPERACION;
					RAISE_APPLICATION_ERROR(-20001, V_ERROR);
				END IF;
		END IF;
	END IF;





	IF NVL(V_HISTORICO, 0) !=  0 THEN
		SELECT
			NVL(TASAMONEDANACIONAL, 0), NVL(TASAMONEDAEXTRANJERA, 0) INTO V_TASAMONEDANACIONAL, V_TASAMONEDAEXTRANJERA
		FROM
			OPERACION
		WHERE
			CORRELATIVO IN (SELECT MAX(op.CORRELATIVO) FROM OPERACION op WHERE op.NUMEROOPERACION = V_NUMEROOPERACION);


		V_IDTEMP := SYS_GUID();
		V_IDTEMP := LOWER(SUBSTR(V_IDTEMP, 1, 8) || '-' || SUBSTR(V_IDTEMP, 9, 4) || '-' || SUBSTR(V_IDTEMP, 13, 4) || '-' || SUBSTR(V_IDTEMP, 17, 4) || '-' || SUBSTR(V_IDTEMP, 21));
		V_CORRELATIVO := FN_BCR_CORREL_GENCOMPUESTO('Operacion');


		INSERT INTO OPERACION (
				ID,
				ID_CARGA,
				FECHACONTRATACION,
				ID_PRODUCTO,
				NUMEROOPERACION,
				ID_CLIENTE,
				TIPOOPERACION,
				IDDIVISAENTRADA,
				IDDIVISASALIDA,
				IMPORTEDIVISAENTRADA,
				IMPORTEDIVISASALIDA,
				COTIZACION,
				PUNTOSSWAP,
				BASICA,
				CAMBIOREF,
				FECHAVALOR,
				FECHAVENCIMIENTO,
				PLAZO,
				FECHAEJERCICIO,
				CALLPUT,
				PLAZA,
				PAISRESIDENCIA,
				RIESGOPAIS,
				PRIMA,
				IDDIVISAPRIMA,
				OBSERVACIONES,
				FECHAALTA,
				FECHAMODIFICACIONCARGA,
				OPERACIONSUSTITUYE,
				FECHABAJA,
				NIF,
				INTERMEDIARIO,
				INTERMEDIARIODESCRIPCION,
				ESTADO,
				CONTRATO,
				RESIDENTE,
				ESTILO,
				TIPOOPCION,
				TIPOPROCESO,
				HISTORICO,
				FECHAMOVIMIENTO,
				USUARIOCARGA,
				CODIGOOPERACION,
				IMPORTEUSD,
				CODIGOREPORTE,
				TASAMONEDANACIONAL,
				MONTOMONEDAEXTRANJERA,
				TASADIFERENCIAL,
				DELTA,
				TASAMONEDAEXTRANJERA,
				IDMONEDAEXTRANJERA,
				MONTOPEN,
				TIPOCAMBIOSPOT,
				TIPOCAMBIOPACTADO,
				TIPOCAMBIOVENCIMIENTO,
				VALIDACION,
				CODIGOAGRUPACION,
				TIPOCLIENTE,
				IDFILAARCHIVO,
				CREADO_POR,
				FECHA_CREACION,
				CODIGOESTADO,
                TIPOACCION,
				CORRELATIVO
			) VALUES (
				V_IDTEMP,
				P_IDCARGA,
				P_FECHACONTRATACION,
				P_IDPRODUCTO,
				V_NUMEROOPERACION,
				P_IDCLIENTE,
				P_TIPOOPERACION,
				P_IDDIVISAENTRADA,
				P_IDDIVISASALIDA,
				P_IMPORTEDIVISAENTRADA,
				P_IMPORTEDIVISASALIDA,
				P_COTIZACION,
				P_PUNTOSSWAP,
				P_BASICA,
				P_CAMBIOREF,
				P_FECHAVALOR,
				P_FECHAVENCIMIENTO,
				P_PLAZO,
				P_FECHAEJERCICIO,
				P_CALLPUT,
				P_PLAZA,
				P_PAISRESIDENCIA,
				P_RIESGOPAIS,
				P_PRIMA,
				P_IDDIVISAPRIMA,
				P_OBSERVACIONES,
				P_FECHAALTA,
				P_FECHAMODIFICACIONCARGA,
				P_OPERACIONSUSTITUYE,
				P_FECHABAJA,
				P_NIF,
				P_INTERMEDIARIO,
				P_INTERMEDIARIODESCRIPCION,
				P_ESTADO,
				P_CONTRATO,
				P_RESIDENTE,
				P_ESTILO,
				P_TIPOOPCION,
				P_TIPOPROCESO,
				V_HISTORICO,
				P_FECHAMOVIMIENTO,
				P_USUARIOCARGA,
				P_CODIGOOPERACION,
				P_IMPORTEUSD,
				P_CODIGOREPORTE,
				P_TASAMONEDANACIONAL,
				P_MONTOMONEDAEXTRAJERA,
				P_TASADIFERENCIAL,
				P_DELTA,
				P_TASAMONEDAEXTRANJERA,
				P_IDMONEDAEXTRANJERA,
				P_MONTOPEN,
				P_TIPOCAMBIOSPOT,
				P_TIPOCAMBIOPACTADO,
				P_TIPOCAMBIOVENCIMIENTO,
				P_VALIDACION,
				P_CODIGOAGRUPACION,
				P_TIPOCLIENTE,
				P_IDFILAARCHIVO,
				P_USUARIOCREACION,
				SYSDATE,
				1, 		-- estado activo
                P_TIPOACCION,
				V_CORRELATIVO
			);
	END IF;

END;

/

GRANT EXECUTE ON "PCBCRP"."SP_BCR_CLIENTE_LISTAR" TO "APP_PCBCRP";
GRANT EXECUTE ON "PCBCRP"."SP_BCR_OPERACION_UNWIND" TO "APP_PCBCRP";

-- FIN CPASCOS 

-- INICIO SEBASTIAN

--------------------------------------------------------
--  DELETE STORED PROCEDURES
--------------------------------------------------------
DROP PROCEDURE "PCBCRP"."SP_BCR_ANEXO_OCHO_DETALLE";
DROP PROCEDURE "PCBCRP"."SP_BCR_ANEXO_OCHO_ELIMINARDET";
DROP PROCEDURE "PCBCRP"."SP_BCR_ANEXO_OCHO_LISTAR";
DROP PROCEDURE "PCBCRP"."SP_BCR_ANEXO_OCHO_PARAMETROS";
DROP PROCEDURE "PCBCRP"."SP_BCR_ANEXO_OCHO_INICIALIZAR";
--------------------------------------------------------
--  DDL for Procedure SP_BCR_ANEXO_OCHO_PARAMETROS
--------------------------------------------------------
create PROCEDURE "PCBCRP"."SP_BCR_ANEXO_OCHO_INICIALIZAR" (
P_FECHAPROCESO IN DATE
)
AS

V_IDCAO         VARCHAR2(255);
V_IDAO          VARCHAR2(255);
V_CODIGO        VARCHAR2(255);
V_IMPORTE 	    NUMBER(20, 6) := 0;
V_REPORTE       INT;
V_COUNTREPORTE4 INT;
V_COUNT         INT;

CURSOR  C_ANEXOOCHO IS
SELECT ID,CODIGO, REPORTE, TIPOOPERACION, CODIGOPRODUCTO FROM ANEXO_OCHO
WHERE CODIGOESTADO = 1;

CURSOR  C_ANEXOOCHOTEMP IS
SELECT ID, CODIGO, REPORTE, TIPOOPERACION, CODIGOPRODUCTO FROM ANEXO_OCHO
WHERE CODIGOESTADO = 1 
AND ID NOT IN (SELECT ID_ANEXOOCHO FROM CUADRE_ANEXO_OCHO WHERE TO_CHAR(FECHA,'dd/mm/yyyyy') = TO_CHAR(P_FECHAPROCESO,'dd/mm/yyyyy'));


BEGIN
        SELECT COUNT(*) INTO V_COUNT FROM CUADRE_ANEXO_OCHO
        WHERE TO_CHAR(FECHA,'dd/mm/yyyyy') = TO_CHAR(P_FECHAPROCESO,'dd/mm/yyyyy');

        SELECT COUNT(*) INTO V_COUNTREPORTE4
        FROM MOVIMIENTO_POSICION_CAMBIARIA mpc
        INNER JOIN POSICION_CAMBIARIA pc ON mpc.ID_POSICIONCAMBIARIA = pc.ID
        WHERE TO_CHAR(mpc.FECHA, 'dd/mm/yyyy')= TO_CHAR(P_FECHAPROCESO, 'dd/mm/yyyy')
        AND mpc.TIPOPROCESO = 'D';
                
    IF  V_COUNT = 0 THEN

        FOR AO IN C_ANEXOOCHO LOOP
            V_IDCAO := SYS_GUID();
            V_IDAO:= AO.ID;
            V_CODIGO:= AO.CODIGO;
            V_REPORTE:= AO.REPORTE;
            V_IMPORTE:=0;
            IF V_REPORTE = 4  AND V_COUNTREPORTE4 > 0 THEN
            
                SELECT NVL(mpc.IMPORTEACTUAL, 0) INTO V_IMPORTE
                FROM MOVIMIENTO_POSICION_CAMBIARIA mpc
                INNER JOIN POSICION_CAMBIARIA pc ON mpc.ID_POSICIONCAMBIARIA = pc.ID
                WHERE TO_CHAR(mpc.FECHA, 'dd/mm/yyyy')= TO_CHAR(P_FECHAPROCESO, 'dd/mm/yyyy')
                AND mpc.TIPOPROCESO = 'D' AND pc.CODIGO IN (V_CODIGO);
                
            ELSIF V_REPORTE = 8  THEN
                V_IMPORTE := 0;
                
                IF AO.CODIGOPRODUCTO = 'SWAP' THEN
                    SELECT NVL(SUM(NVL(o.IMPORTEUSD,0)),0) INTO V_IMPORTE
                    FROM TASA_INTERES o
                    INNER JOIN PRODUCTO p ON p.ID = o.ID_PRODUCTO
                    INNER JOIN CLIENTE c ON c.ID = o.ID_CLIENTE
                    INNER JOIN DIVISA de ON de.ID = o.IDDIVISAENTRADA
                    INNER JOIN DIVISA ds ON ds.ID = o.IDDIVISASALIDA
                    LEFT JOIN DIVISA dp ON dp.ID = o.IDDIVISAPRIMA
                    LEFT JOIN DIVISA dex ON dex.ID = o.IDMONEDAEXTRANJERA
                    WHERE
                    o.ESTADO <> 'A' --Anulada
                    AND o.CODIGOESTADO = 1
                    AND TO_DATE(TO_CHAR(o.FECHAMOVIMIENTO, 'dd/mm/yyyy')) <= TO_DATE(TO_CHAR(P_FECHAPROCESO, 'dd/mm/yyyy'))
                    --QUITO LAS VENCIDAS
                    AND TO_DATE(TO_CHAR(o.FECHAVENCIMIENTO, 'dd/mm/yyyy')) > TO_DATE(TO_CHAR(P_FECHAPROCESO, 'dd/mm/yyyy'))
                    AND o.TIPOPROCESO = 'D'
                    AND o.TIPOOPERACION = AO.TIPOOPERACION
                    AND o.ID_PRODUCTO = (SELECT p.ID FROM PRODUCTO p WHERE p.CODIGO = 'IRD')--@i_idProductoIRD
                    ORDER BY TO_NUMBER(O.CORRELATIVO);
                    
                ELSIF AO.CODIGOPRODUCTO ='OPT' THEN
                    SELECT  NVL(SUM(NVL(o.IMPORTEUSD,0)),0) INTO V_IMPORTE
                    FROM OPERACION_DERIVADO o
                            INNER JOIN PRODUCTO p ON p.ID = o.ID_PRODUCTO
                            INNER JOIN CLIENTE c ON c.ID = o.ID_CLIENTE
                            INNER JOIN DIVISA d ON d.ID = o.IDDIVISA
                    WHERE
                        o.CODIGOESTADO = 1
                        AND TO_DATE(TO_CHAR(o.FECHAMOVIMIENTO, 'dd/mm/yyyy')) <= TO_DATE(TO_CHAR(P_FECHAPROCESO, 'dd/mm/yyyy'))
                        --QUITO LAS VENCIDAS
                        AND TO_DATE(TO_CHAR(o.FECHATERMINO, 'dd/mm/yyyy')) > TO_DATE(TO_CHAR(P_FECHAPROCESO, 'dd/mm/yyyy'))
                        AND o.TIPOPROCESO = 'D'
                        AND o.TIPOOPERACION = AO.TIPOOPERACION
                        AND o.ID_PRODUCTO IN (SELECT p.ID FROM PRODUCTO p WHERE p.CODIGO IN ('ODIV'))
                        AND c.CODIGO NOT IN ('PER013597')
                        ORDER BY TO_NUMBER(O.CORRELATIVO);
                END IF;
                    
            END IF;
            DBMS_OUTPUT.PUT_LINE('INSERT 1: '||V_IMPORTE);
            INSERT INTO CUADRE_ANEXO_OCHO
            (ID, ID_ANEXOOCHO, FECHA_CREACION, FECHA, MONTOPOSICIONCAMBIARIA, MONTOANEXO, DIFERENCIA,DESCRIPCION, CODIGOESTADO)
            VALUES(V_IDCAO, V_IDAO, SYSDATE,P_FECHAPROCESO,V_IMPORTE,0,0,'Sin cuadrar',1);
            COMMIT;

        END LOOP;
    ELSE

        FOR AO IN C_ANEXOOCHOTEMP LOOP
            V_IDCAO := SYS_GUID();
            V_IDAO:= AO.ID;
            V_CODIGO:= AO.CODIGO;
            V_REPORTE:= AO.REPORTE;
            V_IMPORTE:=0;
            
            IF V_REPORTE = 4  AND V_COUNTREPORTE4 > 0 THEN
            
                SELECT NVL(mpc.IMPORTEACTUAL, 0) INTO V_IMPORTE
                FROM MOVIMIENTO_POSICION_CAMBIARIA mpc
                INNER JOIN POSICION_CAMBIARIA pc ON mpc.ID_POSICIONCAMBIARIA = pc.ID
                WHERE TO_CHAR(mpc.FECHA, 'dd/mm/yyyy')= TO_CHAR(P_FECHAPROCESO, 'dd/mm/yyyy')
                AND mpc.TIPOPROCESO = 'D' AND pc.CODIGO IN (V_CODIGO);
                
            ELSIF V_REPORTE = 8  THEN
            
                V_IMPORTE := 0;
                
                IF AO.CODIGOPRODUCTO = 'SWAP' THEN
                    SELECT NVL(SUM(NVL(o.IMPORTEUSD,0)),0) INTO V_IMPORTE
                    FROM TASA_INTERES o
                    INNER JOIN PRODUCTO p ON p.ID = o.ID_PRODUCTO
                    INNER JOIN CLIENTE c ON c.ID = o.ID_CLIENTE
                    INNER JOIN DIVISA de ON de.ID = o.IDDIVISAENTRADA
                    INNER JOIN DIVISA ds ON ds.ID = o.IDDIVISASALIDA
                    LEFT JOIN DIVISA dp ON dp.ID = o.IDDIVISAPRIMA
                    LEFT JOIN DIVISA dex ON dex.ID = o.IDMONEDAEXTRANJERA
                    WHERE
                    o.ESTADO <> 'A' --Anulada
                    AND o.CODIGOESTADO = 1
                    AND TO_DATE(TO_CHAR(o.FECHAMOVIMIENTO, 'dd/mm/yyyy')) <= TO_DATE(TO_CHAR(P_FECHAPROCESO, 'dd/mm/yyyy'))
                    --QUITO LAS VENCIDAS
                    AND TO_DATE(TO_CHAR(o.FECHAVENCIMIENTO, 'dd/mm/yyyy')) > TO_DATE(TO_CHAR(P_FECHAPROCESO, 'dd/mm/yyyy'))
                    AND o.TIPOPROCESO = 'D'
                    AND o.TIPOOPERACION = AO.TIPOOPERACION
                    AND o.ID_PRODUCTO = (SELECT p.ID FROM PRODUCTO p WHERE p.CODIGO = 'IRD')--@i_idProductoIRD
                    ORDER BY TO_NUMBER(O.CORRELATIVO);
                    
                ELSIF AO.CODIGOPRODUCTO ='OPT' THEN
                    SELECT  NVL(SUM(NVL(o.IMPORTEUSD,0)),0) INTO V_IMPORTE
                    FROM OPERACION_DERIVADO o
                            INNER JOIN PRODUCTO p ON p.ID = o.ID_PRODUCTO
                            INNER JOIN CLIENTE c ON c.ID = o.ID_CLIENTE
                            INNER JOIN DIVISA d ON d.ID = o.IDDIVISA
                    WHERE
                        o.CODIGOESTADO = 1
                        AND TO_DATE(TO_CHAR(o.FECHAMOVIMIENTO, 'dd/mm/yyyy')) <= TO_DATE(TO_CHAR(P_FECHAPROCESO, 'dd/mm/yyyy'))
                        --QUITO LAS VENCIDAS
                        AND TO_DATE(TO_CHAR(o.FECHATERMINO, 'dd/mm/yyyy')) > TO_DATE(TO_CHAR(P_FECHAPROCESO, 'dd/mm/yyyy'))
                        AND o.TIPOPROCESO = 'D'
                        AND o.TIPOOPERACION = AO.TIPOOPERACION
                        AND o.ID_PRODUCTO IN (SELECT p.ID FROM PRODUCTO p WHERE p.CODIGO IN ('ODIV'))
                        AND c.CODIGO NOT IN ('PER013597')
                        ORDER BY TO_NUMBER(O.CORRELATIVO);
                END IF;
                    
            END IF;
            DBMS_OUTPUT.PUT_LINE('INSERT 2: '||V_IMPORTE);
            INSERT INTO CUADRE_ANEXO_OCHO
            (ID, ID_ANEXOOCHO, FECHA_CREACION, FECHA, MONTOPOSICIONCAMBIARIA, MONTOANEXO, DIFERENCIA,DESCRIPCION, CODIGOESTADO)
            VALUES(V_IDCAO, V_IDAO, SYSDATE,P_FECHAPROCESO,V_IMPORTE,0,0,'Sin cuadrar',1);
            COMMIT;

        END LOOP;
        
        FOR AO IN C_ANEXOOCHO LOOP
            V_IDCAO := SYS_GUID();
            V_IDAO:= AO.ID;
            V_CODIGO:= AO.CODIGO;
            V_REPORTE:= AO.REPORTE;
            V_IMPORTE:=0;
            
            IF V_REPORTE = 4  AND V_COUNTREPORTE4 > 0 THEN
            
                SELECT NVL(mpc.IMPORTEACTUAL, 0) INTO V_IMPORTE
                FROM MOVIMIENTO_POSICION_CAMBIARIA mpc
                INNER JOIN POSICION_CAMBIARIA pc ON mpc.ID_POSICIONCAMBIARIA = pc.ID
                WHERE TO_CHAR(mpc.FECHA, 'dd/mm/yyyy')= TO_CHAR(P_FECHAPROCESO, 'dd/mm/yyyy')
                AND mpc.TIPOPROCESO = 'D' AND pc.CODIGO IN (V_CODIGO);
                
            ELSIF V_REPORTE = 8 THEN
                V_IMPORTE := 0;
                    IF AO.CODIGOPRODUCTO = 'SWAP' THEN
                    SELECT NVL(SUM(NVL(o.IMPORTEUSD,0)),0) INTO V_IMPORTE
                    FROM TASA_INTERES o
                    INNER JOIN PRODUCTO p ON p.ID = o.ID_PRODUCTO
                    INNER JOIN CLIENTE c ON c.ID = o.ID_CLIENTE
                    INNER JOIN DIVISA de ON de.ID = o.IDDIVISAENTRADA
                    INNER JOIN DIVISA ds ON ds.ID = o.IDDIVISASALIDA
                    LEFT JOIN DIVISA dp ON dp.ID = o.IDDIVISAPRIMA
                    LEFT JOIN DIVISA dex ON dex.ID = o.IDMONEDAEXTRANJERA
                    WHERE
                    o.ESTADO <> 'A' --Anulada
                    AND o.CODIGOESTADO = 1
                    AND TO_DATE(TO_CHAR(o.FECHAMOVIMIENTO, 'dd/mm/yyyy')) <= TO_DATE(TO_CHAR(P_FECHAPROCESO, 'dd/mm/yyyy'))
                    --QUITO LAS VENCIDAS
                    AND TO_DATE(TO_CHAR(o.FECHAVENCIMIENTO, 'dd/mm/yyyy')) > TO_DATE(TO_CHAR(P_FECHAPROCESO, 'dd/mm/yyyy'))
                    AND o.TIPOPROCESO = 'D'
                    AND o.TIPOOPERACION = AO.TIPOOPERACION
                    AND o.ID_PRODUCTO = (SELECT p.ID FROM PRODUCTO p WHERE p.CODIGO = 'IRD')--@i_idProductoIRD
                    ORDER BY TO_NUMBER(O.CORRELATIVO);
                    
                ELSIF AO.CODIGOPRODUCTO ='OPT' THEN
                    SELECT  NVL(SUM(NVL(o.IMPORTEUSD,0)),0) INTO V_IMPORTE
                    FROM OPERACION_DERIVADO o
                            INNER JOIN PRODUCTO p ON p.ID = o.ID_PRODUCTO
                            INNER JOIN CLIENTE c ON c.ID = o.ID_CLIENTE
                            INNER JOIN DIVISA d ON d.ID = o.IDDIVISA
                    WHERE
                        o.CODIGOESTADO = 1
                        AND TO_DATE(TO_CHAR(o.FECHAMOVIMIENTO, 'dd/mm/yyyy')) <= TO_DATE(TO_CHAR(P_FECHAPROCESO, 'dd/mm/yyyy'))
                        --QUITO LAS VENCIDAS
                        AND TO_DATE(TO_CHAR(o.FECHATERMINO, 'dd/mm/yyyy')) > TO_DATE(TO_CHAR(P_FECHAPROCESO, 'dd/mm/yyyy'))
                        AND o.TIPOPROCESO = 'D'
                        AND o.TIPOOPERACION = AO.TIPOOPERACION
                        AND o.ID_PRODUCTO IN (SELECT p.ID FROM PRODUCTO p WHERE p.CODIGO IN ('ODIV'))
                        AND c.CODIGO NOT IN ('PER013597')
                        ORDER BY TO_NUMBER(O.CORRELATIVO);
                END IF;
                    
            END IF;
            DBMS_OUTPUT.PUT_LINE('UPDATE: '||V_IMPORTE);
            UPDATE CUADRE_ANEXO_OCHO
            SET MONTOPOSICIONCAMBIARIA = V_IMPORTE
            WHERE ID_ANEXOOCHO = V_IDAO;
            
            COMMIT;

        END LOOP;
        

    END IF;

END;
/
--------------------------------------------------------
--  DDL for Procedure SP_BCR_ANEXO_OCHO_DETALLE
--------------------------------------------------------
create PROCEDURE "PCBCRP"."SP_BCR_ANEXO_OCHO_DETALLE" (
P_ID_CUADRE_ANEXO_OCHO   IN VARCHAR2,
CURSOR_ 	OUT SYS_REFCURSOR
)
AS

BEGIN
    OPEN CURSOR_ FOR
        SELECT 
            FUENTE,
            PRODUCTO,
            NUMEROOPERACION,
            CODIGOOPERACION,
            MONTOPOSICIONCAMBIARIA,
            MONTOANEXO,
            DIFERENCIA,
            TIPOOPERACION,
            MONEDAENTREGA,
            MONEDARECIBE,
            FECHAINICIO,
            FECHAVENCIMIENTO,
            CLIENTE,
            RESIDENTE,
            PAIS,
            FINANCIERO,
            TIPOTASAINTERESRECIBE,
            TIPOTASAINTERESENTREGA,
            MONEDA,
            TASAINTERESRECIBE,
            TASAINTERESENTREGA,
            OBSERVACION
            
        FROM DETALLE_ANEXO_OCHO
        WHERE ID_CUADREANEXOOCHO=P_ID_CUADRE_ANEXO_OCHO;
        
END;
/
--------------------------------------------------------
--  DDL for Procedure SP_BCR_ANEXO_OCHO_ELIMINARDET
--------------------------------------------------------
create PROCEDURE "PCBCRP"."SP_BCR_ANEXO_OCHO_ELIMINARDET" (
P_ID_CUADRE_ANEXO_OCHO   IN VARCHAR2
)
AS
BEGIN
   DELETE FROM DETALLE_ANEXO_OCHO
   WHERE ID_CUADREANEXOOCHO = P_ID_CUADRE_ANEXO_OCHO;
   COMMIT;
END;
/
--------------------------------------------------------
--  DDL for Procedure SP_BCR_ANEXO_OCHO_LISTAR
--------------------------------------------------------
create PROCEDURE "PCBCRP"."SP_BCR_ANEXO_OCHO_LISTAR" (
P_FECHAPROCESO IN DATE,
CURSOR_ OUT SYS_REFCURSOR
)
AS
BEGIN
OPEN CURSOR_ FOR
 SELECT 
    CAO.ID, 
    AO.FUENTE,
    (SELECT
            det.DESCRIPCION
        FROM
            PARAMETRO par
            INNER JOIN DETALLE_PARAMETRO det ON par.ID = det.ID_PARAMETRO
            INNER JOIN VALOR_PARAMETRO val ON det.ID = val.ID_DETALLE AND par.CODIGO = '002'
            WHERE val.VALOR = AO.TIPOOPERACION
    )   
    AS TIPOOPERACION,
    CAO.MONTOPOSICIONCAMBIARIA,
    CAO.MONTOANEXO,
    CAO.DIFERENCIA,
    CAO.PROGRESO,
    CAO.DESCRIPCION
    FROM CUADRE_ANEXO_OCHO CAO
    INNER JOIN ANEXO_OCHO AO ON CAO.ID_ANEXOOCHO=AO.ID
    WHERE 
    TO_CHAR(CAO.FECHA, 'dd/mm/yyyy') =TO_CHAR(P_FECHAPROCESO, 'dd/mm/yyyy') 
    AND CAO.CODIGOESTADO='1'
    ORDER BY  AO.REPORTE ASC, AO.FUENTE ASC , AO.TIPOOPERACION ASC;

END;
/
--------------------------------------------------------
--  DDL for Procedure SP_BCR_ANEXO_OCHO_PARAMETROS
--------------------------------------------------------
create PROCEDURE "PCBCRP"."SP_BCR_ANEXO_OCHO_PARAMETROS" (
P_FECHAPROCESO IN DATE,
P_CODIGOARCHIVO IN VARCHAR2,
CURSOR_ OUT SYS_REFCURSOR
)
AS
BEGIN
OPEN CURSOR_ FOR

SELECT CAO.ID AS IDCUADREANEXOOCHO, AO.FUENTE, AO.TIPOOPERACION, AO.REPORTE, AO.CODIGO, AO.CODIGOPRODUCTO, AO.CODIGOARCHIVO,
    (SELECT MPC.ID FROM POSICION_CAMBIARIA PC
        INNER JOIN MOVIMIENTO_POSICION_CAMBIARIA MPC ON PC.ID=MPC.ID_POSICIONCAMBIARIA
        WHERE PC.CODIGO=AO.CODIGO AND TO_CHAR(MPC.FECHA, 'dd/mm/yyyy')=TO_CHAR(P_FECHAPROCESO, 'dd/mm/yyyy')
        AND MPC.TIPOPROCESO = 'D') AS IDPOSICIONCAMBIARIA,
    (SELECT SD.ID FROM SALDO_DERIVADOS SD
    INNER JOIN MOVIMIENTO_SALDO_DERIVADOS MSD ON SD.ID = MSD.ID_SALDODERIVADOS
    WHERE SD.CODIGOOPERACION=AO.CODIGO 
    AND TO_CHAR(MSD.FECHA, 'dd/mm/yyyy') = TO_CHAR(P_FECHAPROCESO, 'dd/mm/yyyy')) AS IDSALDODERIVADOS
FROM CUADRE_ANEXO_OCHO CAO
INNER JOIN ANEXO_OCHO AO ON CAO.ID_ANEXOOCHO=AO.ID
WHERE AO.CODIGOARCHIVO = P_CODIGOARCHIVO
AND TO_CHAR(CAO.FECHA, 'dd/mm/yyyy') = TO_CHAR(P_FECHAPROCESO, 'dd/mm/yyyy');

END;

/

GRANT EXECUTE ON "PCBCRP"."SP_BCR_ANEXO_OCHO_INICIALIZAR" TO "APP_PCBCRP";
GRANT EXECUTE ON "PCBCRP"."SP_BCR_ANEXO_OCHO_DETALLE" TO "APP_PCBCRP";
GRANT EXECUTE ON "PCBCRP"."SP_BCR_ANEXO_OCHO_ELIMINARDET" TO "APP_PCBCRP";
GRANT EXECUTE ON "PCBCRP"."SP_BCR_ANEXO_OCHO_LISTAR" TO "APP_PCBCRP";
GRANT EXECUTE ON "PCBCRP"."SP_BCR_ANEXO_OCHO_PARAMETROS" TO "APP_PCBCRP";

-- FIN SEBASTIAN

